{"version":3,"sources":["Common/Pager/arrow.svg","Common/Pager/disabledArrow.svg","voteIcon.svg","noMovieImage.svg","noPersonImage.svg","Common/LoadingPage/loadingRing.svg","Common/NoResults/noResultsImage.svg","Common/Failed/failedIcon.svg","NavLogoButton/navLogo.svg","MoviePage/voteIcon.svg","GlobalStyle.js","Common/Container/styled.js","Common/Container/index.js","keys.js","MovieSmallTile/styled.js","imageBaseLink.js","MoviesSlice.js","MovieSmallTile/index.js","Common/PersonTile/styled.js","Common/PersonTile/index.js","Common/GridTemplate/styled.js","Common/GridTemplate/index.js","Common/Header/styled.js","Common/Header/index.js","Common/LoadingPage/styled.js","Common/LoadingPage/index.js","Common/NoResults/styled.js","Common/NoResults/index.js","Common/Failed/styled.js","Common/Failed/index.js","Common/Pager/styled.js","useQueryParameter.js","useReplaceQueryParameter.js","Common/Pager/index.js","Movies/index.js","People/index.js","NavLogoButton/styled.js","NavLogoButton/index.js","Browser/styled.js","Browser/useSearchByQuery.js","Browser/index.js","styled.js","MoviePage/styled.js","UniversalBigTile/styled.js","Common/WidthContainer/styled.js","Common/WidthContainer/index.js","UniversalBigTile/index.js","MoviePage/index.js","PersonPage/index.js","App.js","serviceWorker.js","theme.js","fetchFromApi.js","MoviesSaga.js","store.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","theme","color","background","Main","styled","main","breakpoint","noContainer","mobileMax","Container","children","apiKey","TileContainer","div","mainFont","tileBackground","mobile","ContentContainer","PosterImage","img","noImage","css","noImageBackground","MovieTitle","p","ReselaseYear","secondaryFont","Genres","genresBoxBackground","GenresBox","VotesBox","VoteIcon","VotesAverage","VotesCount","ImageBaseLink","size","moviesSlice","createSlice","name","initialState","pageInformations","page","results","total_results","total_pages","movieDetails","movieCredits","personDetails","personCredits","genres","queryString","status","reducers","initiateFetch","payload","setStatus","state","setPageInformation","setMovieDetails","setMovieCredits","setPersonDetails","setPersonCredits","setGenres","fetchGenresList","initiateMovieOrPersonFetch","inputChange","setQueryString","actions","selectMovies","movies","selectStatus","selectPageInformation","selectMovieDetails","selectMovieCredits","selectPersonDetails","selectPersonCredits","selectGenres","selectQueryString","MovieSmallTile","content","tileImageBaseLink","imageBaseLink","date","Date","release_date","useSelector","src","poster_path","alt","title","getFullYear","genre_ids","map","genre_id","genre","id","key","voteIcon","vote_average","vote_count","section","StyledImage","Name","h3","black","JobOrCharacterName","h4","jobOrCharacterName","PersonTile","person","castAndCrew","imageLink","profile_path","character","job","Wrapper","ul","type","GridTemplateLink","Link","GridTemplate","dispatch","useDispatch","fragment","credit_id","onClick","to","StyledHeader","h2","Header","text","ImageContainer","LoadingPage","loadingRing","NoResults","noResultsImage","MainHeader","SmallHeader","StyledLink","refreshButtonFont","refreshButtonBackground","Failed","icon","nav","ButtonContainer","TextContainer","pageText","Counter","strong","Button","button","pagerButton","pagerButtonDisabled","TextToHide","span","Img","left","second","useQueryParameter","param","location","useLocation","URLSearchParams","search","get","useReplaceQueryParameter","history","useHistory","value","searchParams","set","delete","push","toString","Pager","replaceQueryParameter","maxPage","pageNumber","Number","onClickButton","disabled","arrow","disabledArrow","Movies","query","useEffect","People","people","NavButton","NavLogo","NavContent","NavLogoButton","navLogo","BrowserInput","input","useSearchByQuery","pathname","includes","queryValue","trim","undefined","Browser","useState","setValue","searchByQuery","placeholder","onChange","target","BackgroundContainer","StyledNavLink","NavLink","attrs","activeClassName","StyledNavLinkLogo","NavListItem","li","NavList","NavContainer","PosterBackgrundContainer","posterBackground","PosterShadowContainer","link","posterFont","PosterBackgroundImageContainer","PosterItemsContainer","Title","h1","VotesContainer","VotesAverageBox","VotesSmallContent","VotesBigContent","MobileTileContainer","AdditionalContentContainer","AdditionalContentBox","AdditionalContentTitle","AdditionalContent","VotesScale","Overview","MobileOverview","WidthContainer","UniversalBigTile","defaultDate","imagePath","birthday","noMovieImage","noPersonImage","production_countries","production_country","join","toLocaleDateString","place_of_birth","overview","biography","MoviePage","useParams","posterImageBaseLink","backdrop_path","cast","crew","length","path","PersonPage","Boolean","window","hostname","match","fetchFromApi","a","queryIfExist","Axios","params","api_key","response","data","console","log","fetchHandler","inputChangeHandler","MoviesSaga","fetchGenresFromAPI","setGenresList","fetchMovieOrPersonData","fetchMoviesAndPeopleFromAPI","action","put","delay","call","takeLatest","debounce","movieDetailsData","movieCreditsData","personDetailsData","personCreditsData","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","run","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a6d77884.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.184cc848.svg\";","module.exports = __webpack_public_path__ + \"static/media/disabledArrow.007c9ce9.svg\";","module.exports = __webpack_public_path__ + \"static/media/voteIcon.b489e613.svg\";","module.exports = __webpack_public_path__ + \"static/media/noMovieImage.a5dadbe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/noPersonImage.9342c7dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadingRing.d057d55a.svg\";","module.exports = __webpack_public_path__ + \"static/media/noResultsImage.3cb4c491.svg\";","module.exports = __webpack_public_path__ + \"static/media/failedIcon.8815fed7.svg\";","module.exports = __webpack_public_path__ + \"static/media/navLogo.542bbc90.svg\";","module.exports = __webpack_public_path__ + \"static/media/voteIcon.bdf3dbc7.svg\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Poppins', sans-serif;\r\n        background: ${({theme}) => theme.color.background};\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;","import styled from \"styled-components\"\r\n\r\nexport const Main = styled.main`\r\n    max-width: 1368px;\r\n    margin: 56px auto;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        margin: 56px 20px\r\n\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n          max-width: unset;\r\n          width: calc(100% - 32px);\r\n          margin: 24px 16px;\r\n        }\r\n`","import React from \"react\"\r\nimport { Main } from \"./styled\"\r\n\r\nconst Container = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n)\r\n\r\nexport default Container","export const apiKey = \"58fae116de8a1e6752562cf781d6d14a\"\r\n\r\nexport const moviesKey = \"movies\"\r\nexport const peopleKey = \"people\"\r\n\r\nexport const movieKey = \"movie\"\r\nexport const personKey = \"person\"\r\n\r\nexport const searchKey = \"search\"\r\nexport const pageKey = \"page\"","import styled, { css } from \"styled-components\";\r\n\r\nexport const TileContainer = styled.div`\r\n    width: 324px;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    padding: 16px;\r\n    color: ${({ theme }) => theme.color.mainFont};\r\n    font-weight: 400;\r\n    background-color: ${({ theme }) => theme.color.tileBackground};\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        flex-direction: row;\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const ContentContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    display: grid;\r\n    grid-template-rows: repeat(3, auto) 1fr;\r\n    grid-gap: 8px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        padding-left: 16px;\r\n    }\r\n`\r\n\r\nexport const PosterImage = styled.img`\r\n    width: 292px;\r\n    height: 434px;\r\n    margin: 0 0 8px;\r\n    border-radius: 5px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        width: 114px;\r\n        height: 169px;\r\n        margin: 0;\r\n    }\r\n\r\n    ${({ noImage }) => noImage && css`\r\n        background-color: ${({ theme }) => theme.color.noImageBackground};\r\n        background-size: initial;\r\n        background-repeat: no-repeat;\r\n    `}\r\n`\r\n\r\nexport const MovieTitle = styled.p`\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n    font-weight: 500;\r\n    margin: 0;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    }\r\n`\r\n\r\nexport const ReselaseYear = styled.p`\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    margin: 0;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 13px;\r\n    line-height: 17px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`\r\n\r\nexport const Genres = styled.div`\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: ${({ theme }) => theme.color.mainFont};\r\n    padding: 8px 16px;\r\n    margin: 0 8px 8px 0;\r\n    background-color: ${({ theme }) => theme.color.genresBoxBackground};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 10px;\r\n    line-height: 11px;\r\n    padding: 4px 8px;\r\n    }\r\n`\r\n\r\nexport const GenresBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n`\r\n\r\nexport const VotesBox = styled.div`\r\n    max-height: 24px;\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    display: flex;\r\n    align-self: end;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    max-height: 24px;\r\n    font-size: 13px;\r\n    line-height: 24px;\r\n    }\r\n`\r\n\r\nexport const VoteIcon = styled.img`\r\n    width: 24px;\r\n    display: block;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        width: 16px;\r\n    }\r\n`\r\n\r\nexport const VotesAverage = styled.div`\r\n    padding: 0 12px;\r\n    font-weight: 600;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        font-size: 13px;\r\n        line-height: 24px;\r\n        font-weight: 600;\r\n        padding: 0 8px;\r\n    }\r\n`\r\n\r\nexport const VotesCount = styled.div`\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`","function ImageBaseLink(size) {\r\n    return (\r\n        `http://image.tmdb.org/t/p/${size}`\r\n    );\r\n};\r\n\r\nexport default ImageBaseLink;\r\n\r\n// Image size information\r\n\r\n// {\r\n//     \"images\": {\r\n//       \"base_url\": \"http://image.tmdb.org/t/p/\",\r\n//       \"secure_base_url\": \"https://image.tmdb.org/t/p/\",\r\n//       \"backdrop_sizes\": [\r\n//         \"w300\",\r\n//         \"w780\",\r\n//         \"w1280\",\r\n//         \"original\"\r\n//       ],\r\n//       \"logo_sizes\": [\r\n//         \"w45\",\r\n//         \"w92\",\r\n//         \"w154\",\r\n//         \"w185\",\r\n//         \"w300\",\r\n//         \"w500\",\r\n//         \"original\"\r\n//       ],\r\n//       \"poster_sizes\": [\r\n//         \"w92\",\r\n//         \"w154\",\r\n//         \"w185\",\r\n//         \"w342\",\r\n//         \"w500\",\r\n//         \"w780\",\r\n//         \"original\"\r\n//       ],\r\n//       \"profile_sizes\": [\r\n//         \"w45\",\r\n//         \"w185\",\r\n//         \"h632\",\r\n//         \"original\"\r\n//       ],\r\n//       \"still_sizes\": [\r\n//         \"w92\",\r\n//         \"w185\",\r\n//         \"w300\",\r\n//         \"original\"\r\n//       ]\r\n//     },\r\n//     \"change_keys\": [\r\n//       \"adult\",\r\n//       \"air_date\",\r\n//       \"also_known_as\",\r\n//       \"alternative_titles\",\r\n//       \"biography\",\r\n//       \"birthday\",\r\n//       \"budget\",\r\n//       \"cast\",\r\n//       \"certifications\",\r\n//       \"character_names\",\r\n//       \"created_by\",\r\n//       \"crew\",\r\n//       \"deathday\",\r\n//       \"episode\",\r\n//       \"episode_number\",\r\n//       \"episode_run_time\",\r\n//       \"freebase_id\",\r\n//       \"freebase_mid\",\r\n//       \"general\",\r\n//       \"genres\",\r\n//       \"guest_stars\",\r\n//       \"homepage\",\r\n//       \"images\",\r\n//       \"imdb_id\",\r\n//       \"languages\",\r\n//       \"name\",\r\n//       \"network\",\r\n//       \"origin_country\",\r\n//       \"original_name\",\r\n//       \"original_title\",\r\n//       \"overview\",\r\n//       \"parts\",\r\n//       \"place_of_birth\",\r\n//       \"plot_keywords\",\r\n//       \"production_code\",\r\n//       \"production_companies\",\r\n//       \"production_countries\",\r\n//       \"releases\",\r\n//       \"revenue\",\r\n//       \"runtime\",\r\n//       \"season\",\r\n//       \"season_number\",\r\n//       \"season_regular\",\r\n//       \"spoken_languages\",\r\n//       \"status\",\r\n//       \"tagline\",\r\n//       \"title\",\r\n//       \"translations\",\r\n//       \"tvdb_id\",\r\n//       \"tvrage_id\",\r\n//       \"type\",\r\n//       \"video\",\r\n//       \"videos\"\r\n//     ]\r\n//   }","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst moviesSlice = createSlice({\r\n    name: \"movies\",\r\n    initialState: {\r\n        pageInformations: {\r\n            page: 0,\r\n            results: [],\r\n            total_results: 0,\r\n            total_pages: 0\r\n        },\r\n        movieDetails: [],\r\n        movieCredits: [],\r\n        personDetails: [],\r\n        personCredits: [],\r\n        genres: [],\r\n        queryString: \"initial\",\r\n        status: \"loading\"\r\n\r\n    },\r\n    reducers: {\r\n        initiateFetch: ({ payload }) => {\r\n\r\n        },\r\n        setStatus: (state, { payload }) => {\r\n            state.status = payload\r\n        },\r\n        setPageInformation: (state, { payload }) => {\r\n            state.pageInformations = payload\r\n        },\r\n        setMovieDetails: (state, { payload }) => {\r\n            state.movieDetails = payload\r\n        },\r\n        setMovieCredits: (state, { payload }) => {\r\n            state.movieCredits = payload\r\n        },\r\n        setPersonDetails: (state, { payload }) => {\r\n            state.personDetails = payload\r\n        },\r\n        setPersonCredits: (state, { payload }) => {\r\n            state.personCredits = payload\r\n        },\r\n        setGenres: (state, { payload }) => {\r\n            state.genres = payload\r\n        },\r\n        fetchGenresList: () => { },\r\n        initiateMovieOrPersonFetch: () => {\r\n\r\n        },\r\n        inputChange: ({ payload }) => {\r\n\r\n        },\r\n        setQueryString: (state, { payload }) => {\r\n            state.queryString = payload\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    initiateFetch,\r\n    setPageInformation,\r\n    setMovieDetails,\r\n    setMovieCredits,\r\n    setPersonDetails,\r\n    setPersonCredits,\r\n    setGenres,\r\n    fetchGenresList,\r\n    initiateMovieOrPersonFetch,\r\n    inputChange,\r\n    setQueryString,\r\n    setStatus,\r\n} = moviesSlice.actions\r\n\r\nexport const selectMovies = state => state.movies;\r\nexport const selectType = state => selectMovies(state).type;\r\nexport const selectStatus = state => selectMovies(state).status\r\nexport const selectPageInformation = state => selectMovies(state).pageInformations;\r\nexport const selectMovieDetails = state => selectMovies(state).movieDetails;\r\nexport const selectMovieCredits = state => selectMovies(state).movieCredits;\r\nexport const selectPersonDetails = state => selectMovies(state).personDetails;\r\nexport const selectPersonCredits = state => selectMovies(state).personCredits;\r\nexport const selectGenres = state => selectMovies(state).genres;\r\nexport const selectQueryString = state => selectMovies(state).queryString;\r\nexport default moviesSlice.reducer;\r\n\r\n","import React from \"react\";\r\nimport {\r\n    TileContainer,\r\n    ContentContainer,\r\n    PosterImage,\r\n    MovieTitle,\r\n    ReselaseYear,\r\n    GenresBox,\r\n    Genres,\r\n    VotesBox,\r\n    VotesAverage,\r\n    VoteIcon,\r\n    VotesCount } from \"./styled\";\r\nimport voteIcon from \"../voteIcon.svg\";\r\nimport imageBaseLink from \"../imageBaseLink\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGenres } from \"../MoviesSlice\";\r\nimport noImage from \"../noMovieImage.svg\"\r\n\r\nconst MovieSmallTile = ({ content }) => {\r\n    const tileImageBaseLink = imageBaseLink(\"w342\");\r\n    const date = new Date(content.release_date);\r\n    const genres = useSelector(selectGenres);\r\n\r\n    return (\r\n        <TileContainer>\r\n            <PosterImage\r\n                src={content.poster_path ? tileImageBaseLink + content.poster_path : noImage}\r\n                alt={content.title}\r\n                noImage={!content.poster_path}\r\n            />\r\n            <ContentContainer>\r\n            <MovieTitle>{content.title}</MovieTitle>\r\n            <ReselaseYear>{content.release_date ? date.getFullYear() : \"N/N\"}</ReselaseYear>\r\n            <GenresBox>\r\n                {content.genre_ids && genres.genres && content.genre_ids.map((genre_id) => (\r\n                    genres.genres.map(genre => genre.id === genre_id\r\n                        ? <Genres key={genre.id}>{genre.name}</Genres>\r\n                        : \"\")\r\n                ))}\r\n            </GenresBox>\r\n            <VotesBox>\r\n                <VoteIcon src={voteIcon} />\r\n                <VotesAverage>\r\n                    {content.vote_average}\r\n                </VotesAverage>\r\n                <VotesCount>\r\n                    {content.vote_count} votes\r\n                </VotesCount>\r\n            </VotesBox>\r\n            </ContentContainer>\r\n        </TileContainer>\r\n    )\r\n}\r\n\r\nexport default MovieSmallTile","import styled, { css } from \"styled-components\"\r\n\r\n\r\nexport const Container = styled.section`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 16px;\r\n    background-color: ${({ theme }) => theme.color.tileBackground};\r\n    box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n    border-radius: 5px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n       padding: 8px\r\n    }\r\n`\r\n\r\nexport const StyledImage = styled.div`\r\n    background-image: url(${({ src }) => src});\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 177px;\r\n    height: 232px;\r\n    border-radius: 5px;\r\n\r\n    ${({ noImage }) => noImage && css`\r\n        background-color: ${({ theme }) => theme.color.noImageBackground};\r\n        background-size: initial;\r\n        background-repeat: no-repeat;\r\n    `}\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 120px;\r\n        height: 178px;\r\n    }\r\n`\r\n\r\nexport const Name = styled.h3`\r\n    margin: 0;\r\n    margin-top: 8px;\r\n    color: ${({ theme }) => theme.color.black};\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    text-align: center;   \r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nexport const JobOrCharacterName = styled.h4`\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    margin: 8px auto;\r\n    color: ${({ theme }) => theme.color.jobOrCharacterName};\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 13px;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport { Container, Name, StyledImage, JobOrCharacterName } from \"./styled\"\r\nimport imageBaseLink from \"../../imageBaseLink\"\r\nimport noImage from \"../../noPersonImage.svg\"\r\n\r\n\r\n\r\nconst PersonTile = ({ person, castAndCrew }) => {\r\n\r\n    const imageLink = `${imageBaseLink(\"w500\")}${person.profile_path}`\r\n\r\n\r\n    return (\r\n       \r\n            <Container>\r\n                <StyledImage\r\n                    alt={person.name}\r\n                    src={person.profile_path ? imageLink : noImage}\r\n                    noImage={!person.profile_path}\r\n                />\r\n                <Name>\r\n                    {person.name}\r\n                </Name>\r\n                {castAndCrew ?\r\n                    <JobOrCharacterName>\r\n                        {castAndCrew === \"cast\" ? person.character : person.job}\r\n                    </JobOrCharacterName>\r\n                    :\r\n                    \"\"\r\n                }\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default PersonTile ","import styled, { css } from \"styled-components\";\r\nimport { moviesKey, peopleKey } from \"../../keys\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport const Wrapper = styled.ul`\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    display: grid;\r\n    grid-gap: 24px;\r\n    justify-content: center;\r\n    list-style: none;\r\n  \r\n\r\n    ${({ type }) => type === moviesKey && css`\r\n        grid-template-columns: repeat(auto-fill, 324px);\r\n\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: 1fr;\r\n            grid-gap: 16px 0;\r\n        }\r\n`}\r\n\r\n    ${({ type }) => type === peopleKey && css`\r\n        grid-template-columns: repeat(auto-fill, 208px);\r\n        grid-auto-rows: minmax(339px, min-content);\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: repeat(auto-fill, 136px);\r\n            grid-auto-rows: minmax(245px, min-content);\r\n            grid-gap: 16px;}\r\n    `}\r\n\r\n`\r\n\r\nexport const GridTemplateLink = styled(Link)`\r\n    text-decoration: none;\r\n`;\r\n\r\n\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { moviesKey } from \"../../keys\";\r\nimport MovieSmallTile from \"../../MovieSmallTile\";\r\nimport PersonTile from \"../PersonTile\"\r\nimport { Wrapper, GridTemplateLink } from \"./styled\";\r\nimport { selectGenres, setGenres, setStatus } from \"../../MoviesSlice\";\r\n\r\nconst GridTemplate = ({ content, type, castAndCrew }) => {\r\n  const dispatch = useDispatch();\r\n  const genresData = useSelector(selectGenres);\r\n\r\n\r\n  if (genresData === []) {\r\n    dispatch(setGenres([]))\r\n  } else { };\r\n\r\n  return (\r\n    <Wrapper\r\n      type={type}\r\n    >\r\n      {content && content.map((fragment) => (\r\n        <li\r\n          key={fragment.credit_id ? fragment.credit_id : fragment.id}\r\n          onClick={() => dispatch(setStatus(\"loading\"))}\r\n        >\r\n          {\r\n            type === moviesKey\r\n              ? <GridTemplateLink\r\n                to={`/movies/${fragment.id}`}\r\n              >\r\n                {<MovieSmallTile\r\n                  key={fragment.id}\r\n                  content={fragment}\r\n                />}\r\n              </GridTemplateLink>\r\n              : <GridTemplateLink\r\n\r\n                to={`/people/${fragment.id}`}>\r\n                <PersonTile\r\n                  person={fragment}\r\n                  castAndCrew={castAndCrew}\r\n                />\r\n              </GridTemplateLink>\r\n          }\r\n        </li>\r\n      )\r\n      )}\r\n    </Wrapper>\r\n\r\n  )\r\n}\r\n\r\nexport default GridTemplate;","import styled from \"styled-components\"\r\n\r\nexport const StyledHeader = styled.h2`\r\n    font-size: 36px;\r\n    font-weight: 600;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n           font-size: 18px;\r\n        }\r\n`\r\n","import React from \"react\"\r\nimport { StyledHeader } from \"./styled\"\r\n\r\nconst Header = ({ text }) => (\r\n    <StyledHeader>\r\n        {text}\r\n    </StyledHeader>\r\n)\r\n\r\nexport default Header","import styled from \"styled-components\"\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin: 120px auto;\r\n    width: 91px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px){\r\n        margin: 24px auto;\r\n        width: 35px;\r\n    }\r\n`\r\n\r\nexport const StyledImage = styled.img`\r\n    width: 100%;\r\n    animation-name: spiner;\r\n    animation-duration: 0.7s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n\r\n    @keyframes spiner {\r\n        from {\r\n            \r\n        }\r\n        50% {\r\n            transform: rotateZ(180deg);\r\n        }\r\n        to {\r\n            transform: rotateZ(360deg);\r\n        }\r\n    }\r\n`","import React from \"react\"\r\nimport loadingRing from \"./loadingRing.svg\"\r\nimport { ImageContainer, StyledImage } from \"./styled\"\r\n\r\nconst LoadingPage = () => (\r\n    <ImageContainer>\r\n        <StyledImage\r\n            src={loadingRing}\r\n            alt=\"loadingRing\"\r\n        />\r\n    </ImageContainer>\r\n)\r\n\r\nexport default LoadingPage","import styled from \"styled-components\"\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin: 40px auto;\r\n    width: 668px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 80vw\r\n    }\r\n`\r\n\r\nexport const StyledImage = styled.img`\r\n    width: 100%;\r\n`","import React from \"react\"\r\nimport noResultsImage from \"./noResultsImage.svg\"\r\nimport { ImageContainer, StyledImage } from \"./styled\"\r\n\r\nconst NoResults = () => (\r\n    <ImageContainer>\r\n        <StyledImage\r\n            src={noResultsImage}\r\n            alt=\"no results\"\r\n        />\r\n    </ImageContainer>\r\n)\r\n\r\nexport default NoResults","import { Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n    width: 592px;\r\n    margin: 180px auto;\r\n    text-align: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 90vw\r\n    }\r\n`\r\nexport const StyledImage = styled.img`\r\n    width: 100px;\r\n`\r\n\r\nexport const MainHeader = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 36px;\r\n    margin: 24px auto;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 20px;\r\n        margin: 12px auto;\r\n    }\r\n`\r\n\r\nexport const SmallHeader = styled.h3`\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    margin: 24px auto;\r\n    padding: 0 82px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 14px;\r\n        margin: 12px auto;\r\n        padding: 0 20px;\r\n    }\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n    display: inline-block;\r\n    margin: 24px auto;\r\n    padding: 16px 24px;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.color.refreshButtonFont};\r\n    background-color: ${({ theme }) => theme.color.refreshButtonBackground};\r\n    border-radius: 5px;\r\n     \r\n     &:hover {\r\n        filter: brightness(105%)\r\n     }\r\n       \r\n     &:active {\r\n        filter: brightness(110%)\r\n     }\r\n\r\n     @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 9px;\r\n        margin: 12px auto;\r\n        padding: 8 12px;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport icon from \"./failedIcon.svg\"\r\nimport { Container, StyledImage, MainHeader, SmallHeader, StyledLink } from \"./styled\"\r\n\r\nconst Failed = () => (\r\n    <Container>\r\n        <StyledImage\r\n            src={icon}\r\n            alt={\"something gone wrong\"}\r\n        />\r\n        <MainHeader>\r\n            Oops! Something went wrong...\r\n        </MainHeader>\r\n        <SmallHeader>\r\n            Please check your network connection and try again\r\n        </SmallHeader>\r\n        <StyledLink\r\n            to={\"/movies\"}\r\n        >\r\n            Back to home page\r\n        </StyledLink>\r\n    </Container>\r\n)\r\n\r\nexport default Failed","import styled, { css } from \"styled-components\"\r\n\r\nexport const Wrapper = styled.nav`\r\n    display: flex;\r\n    width: 530px;\r\n    height: 36px;\r\n    margin: 40px auto;\r\n    justify-content: space-between;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            width: 250px;\r\n            margin: 32px auto;\r\n        }\r\n`\r\n\r\nexport const ButtonContainer = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 -6px;\r\n`\r\n\r\nexport const TextContainer = styled.div`\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    padding: 8px 18px;\r\n    color: ${({ theme }) => theme.color.pageText};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            font-size: 10px;\r\n            padding: 7.5px 8px\r\n        }\r\n`\r\nexport const Counter = styled.strong`\r\n    display: inline-block;\r\n    margin: 0 8px;\r\n    color: ${({ theme }) => theme.color.black};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            margin: 0 2px\r\n        }\r\n`\r\n\r\nexport const Button = styled.button`\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.color.pagerButton};\r\n    margin: 0 6px;\r\n    border: none;\r\n\r\n    &:hover {\r\n        filter: brightness(105%);\r\n    };\r\n\r\n    &:focus {\r\n    filter: brightness(110%);\r\n    outline: none;\r\n    }\r\n\r\n    &:active {\r\n    filter: brightness(115%);\r\n    outline: none;\r\n    }\r\n\r\n    &:disabled {\r\n        background-color: ${({ theme }) => theme.color.pagerButtonDisabled};\r\n        color: ${({ theme }) => theme.color.black};\r\n        filter: none;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            padding: 7.5px 12px;\r\n            font-size: 5px;\r\n            margin: 0 4px;\r\n        }\r\n\r\n`\r\n\r\nexport const TextToHide = styled.span`\r\n     @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            display: none;\r\n        }\r\n`\r\n\r\nexport const Img = styled.img`\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin-left: 2px;\r\n    }\r\n\r\n    ${({ left }) => left && css`\r\n        transform: rotateY(180deg);\r\n        margin-right: 4px;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            margin-right: 2px;\r\n        }\r\n\r\n    `\r\n    }\r\n\r\n    ${({ second }) => second && css`\r\n        display: none;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            display: inline-block;\r\n        }\r\n        \r\n    ` }\r\n\r\n`\r\n","import { useLocation } from \"react-router-dom\"\r\n\r\nconst useQueryParameter = (param) => {\r\n    const location = useLocation()\r\n    return (new URLSearchParams(location.search).get(param))\r\n}\r\n\r\nexport default useQueryParameter\r\n","import { useLocation, useHistory } from \"react-router-dom\"\r\nimport { pageKey, searchKey } from \"./keys\";\r\n\r\nconst useReplaceQueryParameter = () => {\r\n\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    const setQueryValue = (type, { key, value }) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        if (!value) {\r\n            searchParams.delete(key)\r\n        } else {\r\n            searchParams.set(key, value)\r\n\r\n        }\r\n        if (key === searchKey) {\r\n            searchParams.set(pageKey, 1)\r\n        }\r\n        history.push(`/${type}?${searchParams.toString()}`)\r\n    }\r\n    return setQueryValue\r\n};\r\n\r\nexport default useReplaceQueryParameter","import React from \"react\"\r\nimport { Wrapper, ButtonContainer, Button, TextContainer, Counter, Img, TextToHide } from \"./styled\"\r\nimport arrow from \"./arrow.svg\"\r\nimport disabledArrow from \"./disabledArrow.svg\"\r\nimport useQueryParameter from \"../../useQueryParameter\"\r\nimport useReplaceQueryParameter from \"../../useReplaceQueryParameter\"\r\nimport { pageKey } from \"../../keys\"\r\n\r\nconst Pager = ({ content, type }) => {\r\n\r\n    const page = useQueryParameter(pageKey)\r\n    const replaceQueryParameter = useReplaceQueryParameter()\r\n    const maxPage = content.total_pages\r\n\r\n    const pageNumber = Number(page)\r\n\r\n    const onClickButton = (value) => {\r\n        replaceQueryParameter(type, {\r\n            key: pageKey,\r\n            value: value,\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={pageNumber === 1 || !pageNumber}\r\n                    onClick={() => onClickButton(1)}\r\n                >\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        First\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                        second\r\n                    ></Img>\r\n\r\n                </Button>\r\n                <Button\r\n                    disabled={pageNumber === 1 || !pageNumber}\r\n                    onClick={() => onClickButton(pageNumber - 1)}\r\n                >\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"Previous page\"\r\n                        left\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        Previous\r\n                    </TextToHide>\r\n                </Button>\r\n            </ButtonContainer>\r\n            <TextContainer>\r\n                Page\r\n                <Counter>\r\n                    {pageNumber ? pageNumber : 1}\r\n                </Counter>\r\n                of\r\n                <Counter>\r\n                    {maxPage}\r\n                </Counter>\r\n            </TextContainer>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={pageNumber === maxPage}\r\n                    onClick={() => onClickButton(pageNumber ? pageNumber + 1 : 1 + 1)}\r\n\r\n                >\r\n                    <TextToHide>\r\n                        Next\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"Next page\"\r\n                    ></Img>\r\n                </Button>\r\n                <Button\r\n                    disabled={pageNumber === maxPage}\r\n                    onClick={() => onClickButton(maxPage)}\r\n\r\n                >\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                        second\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        Last\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                    ></Img>\r\n                </Button>\r\n            </ButtonContainer>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Pager","import React, { useEffect } from 'react';\r\nimport Container from '../Common/Container';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport Header from '../Common/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingPage from \"../Common/LoadingPage\"\r\nimport NoResults from '../Common/NoResults';\r\nimport Failed from '../Common/Failed';\r\nimport Pager from '../Common/Pager';\r\nimport { initiateFetch, selectPageInformation, selectStatus, fetchGenresList } from '../MoviesSlice';\r\nimport { moviesKey, pageKey, searchKey } from '../keys';\r\nimport useQueryParameter from '../useQueryParameter';\r\n\r\n\r\n\r\nfunction Movies() {\r\n  const dispatch = useDispatch();\r\n  dispatch(fetchGenresList());\r\n  const type = moviesKey\r\n  const query = useQueryParameter(searchKey)\r\n  const page = useQueryParameter(pageKey)\r\n  const movies = useSelector(selectPageInformation)\r\n  const status = useSelector(selectStatus)\r\n\r\n  useEffect(() => {\r\n    dispatch(initiateFetch({\r\n      page: page ? page : 1,\r\n      type: type,\r\n      query: query\r\n    }))\r\n  }, [query, page, type, dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      {status !== \"failed\" ?\r\n        <Header text={!query ? `Popular ${type}` :\r\n          `${movies.total_results === 0 ? \"Sorry, there are no results for\" : \"Search results for\"} \"${query}\"`} />\r\n        :\r\n        \"\"\r\n      }\r\n      {status === \"loading\" ?\r\n        <LoadingPage /> :\r\n        \"\"\r\n      }\r\n      {status === \"success\" && movies.total_results > 0 ?\r\n        <GridTemplate\r\n          content={movies.results}\r\n          type={type}\r\n        /> :\r\n        \"\"\r\n      }\r\n      {status === \"success\" && movies.total_results === 0 ?\r\n        <NoResults /> :\r\n        \"\"\r\n      }\r\n      {status === \"failed\" ?\r\n        <Failed />\r\n        :\r\n        \"\"\r\n      }\r\n      { status === \"success\" && movies.total_results > 0 ?\r\n        <Pager\r\n          content={movies}\r\n          type={type}\r\n        /> :\r\n        \"\"\r\n      }\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Movies;","import React, { useEffect } from 'react';\r\nimport Container from '../Common/Container';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport Header from '../Common/Header';\r\nimport LoadingPage from \"../Common/LoadingPage\"\r\nimport NoResults from '../Common/NoResults';\r\nimport Failed from '../Common/Failed';\r\nimport Pager from '../Common/Pager';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initiateFetch, selectPageInformation, selectStatus } from '../MoviesSlice';\r\nimport useQueryParameter from '../useQueryParameter';\r\nimport { pageKey, peopleKey, searchKey } from '../keys';\r\n\r\nfunction People() {\r\n  const type = peopleKey\r\n  const query = useQueryParameter(searchKey)\r\n  const page = useQueryParameter(pageKey)\r\n  const dispatch = useDispatch()\r\n  const people = useSelector(selectPageInformation)\r\n  const status = useSelector(selectStatus)\r\n\r\n  useEffect(() => {\r\n    dispatch(initiateFetch({\r\n      page: page ? page : 1,\r\n      type: type,\r\n      query: query\r\n    }))\r\n  }, [query, page, type, dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      {status !== \"failed\" ?\r\n        <Header text={!query ? `Popular ${type}` :\r\n          `${people.total_results === 0 ? \"Sorry, there are no results for\" : \"Search results for\"} \"${query}\"`} />\r\n        :\r\n        \"\"\r\n      }\r\n      {status === \"loading\" ?\r\n        <LoadingPage /> :\r\n        \"\"\r\n      }\r\n      {status === \"success\" && people.total_results > 0 ?\r\n        <GridTemplate\r\n          content={people.results}\r\n          type={type}\r\n        /> :\r\n        \"\"\r\n      }\r\n      {status === \"success\" && people.total_results === 0 ?\r\n        <NoResults /> :\r\n        \"\"\r\n      }\r\n      {status === \"failed\" ?\r\n        <Failed />\r\n        :\r\n        \"\"\r\n      }\r\n      { status === \"success\" && people.total_results > 0 ?\r\n        <Pager\r\n          content={people}\r\n          type={type}\r\n        /> :\r\n        \"\"\r\n      }\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default People;","import styled from \"styled-components\";\r\n\r\nexport const NavButton = styled.button`\r\n    color: white;\r\n    background-color: black;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 50px 0 0;\r\n\r\n    @media (max-width: 1368px) {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const NavLogo = styled.img`\r\n    display: block;\r\n    padding: 0 5px;\r\n`;\r\n\r\nexport const NavContent = styled.span`\r\n    display: block;\r\n    padding: 0 8px;\r\n    font-size: 21px;\r\n\r\n    &:link {\r\n        text-decoration: none;\r\n    }\r\n`;","import React from 'react';\r\nimport { NavButton, NavContent, NavLogo } from \"./styled\"\r\nimport navLogo from \"./navLogo.svg\"\r\n\r\nfunction NavLogoButton() {\r\n\r\n    return (\r\n        <NavButton>\r\n            <NavLogo src={navLogo} alt=\"Navigation Logo\" />\r\n            <NavContent>Movies Browser</NavContent>\r\n        </NavButton>\r\n    );\r\n};\r\n\r\nexport default NavLogoButton;","import styled from \"styled-components\";\r\n\r\nexport const BrowserInput = styled.input`\r\n    line-height: 24px;\r\n    font-size: 16px;\r\n    padding: 12px;\r\n    border-radius: 24px;\r\n    width: 432px;\r\n    max-height: 48px;\r\n    justify-self: end;\r\n\r\n    @media( max-width: 767px) {\r\n        width: 100%;\r\n        line-height: 17px;\r\n        font-size: 13px;\r\n        max-height: 44px;\r\n        border-radius: 22px;\r\n    }\r\n`;","import { useLocation } from \"react-router-dom\"\r\nimport useReplaceQueryParameter from \"../useReplaceQueryParameter\"\r\nimport {moviesKey, peopleKey, searchKey, } from \"../keys\"\r\n\r\n\r\nconst useSearchByQuery = () => {\r\n\r\n    const location = useLocation()\r\n    const replaceQueryParameter = useReplaceQueryParameter()\r\n    \r\n    const searchByQuery = (queryString) => {\r\n        if (queryString !== \"initial\") {\r\n            let type = \"\"\r\n            if (location.pathname.includes(moviesKey)) {\r\n                type = moviesKey;\r\n\r\n            }\r\n            if (location.pathname.includes(peopleKey)) {\r\n                type = peopleKey;\r\n            }\r\n            const queryValue = queryString.trim() !== \"\" ? queryString : undefined\r\n            replaceQueryParameter(type, {\r\n                key: searchKey,\r\n                value: queryValue\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return searchByQuery\r\n}\r\n\r\nexport default useSearchByQuery","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { moviesKey, peopleKey } from '../keys';\r\nimport { inputChange, selectQueryString } from '../MoviesSlice';\r\nimport { BrowserInput } from \"./styled\"\r\nimport useSearchByQuery from './useSearchByQuery';\r\n\r\nfunction Browser() {\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const searchByQuery = useSearchByQuery();\r\n    const location = useLocation();\r\n\r\n    const type = location.pathname.includes(moviesKey) ? moviesKey : peopleKey\r\n\r\n    const queryString = useSelector(selectQueryString);\r\n\r\n    const onInputChange = ({ target }) => {\r\n        setValue(target.value)\r\n        dispatch(inputChange(target.value))\r\n    };\r\n\r\n    useEffect(() => { \r\n        searchByQuery(queryString);\r\n        setValue(\"\")\r\n     }, [queryString])\r\n\r\n    return (\r\n        <BrowserInput\r\n            value={value}\r\n            placeholder={`Search for ${type}...`}\r\n            onChange={onInputChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Browser;","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst activeClassName = \"active\";\r\n\r\nexport const BackgroundContainer = styled.ul`\r\n    background-color: black;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding: 13.5px 20px;\r\n    \r\n    &.${activeClassName} {\r\n        border: 1px solid white;\r\n        border-radius: 24px;\r\n    }\r\n    &:link {\r\n        color: white\r\n    }\r\n`;\r\n\r\nexport const StyledNavLinkLogo = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    color: white;\r\n    padding: 13.5px;\r\n\r\n    &:link {\r\n        color: white\r\n    }\r\n`;\r\n\r\nexport const NavListItem = styled.li`\r\n    padding: 0;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n    list-style: none;\r\n    background-color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0;\r\n    padding: 16px;\r\n    min-height: 94px;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n\r\n    @media( max-width: 767px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n    width: 1368px;\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto) 1fr;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n\r\n@media( max-width: 767px) {\r\n    grid-template-columns: repeat(3, auto);\r\n}\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const PosterBackgrundContainer = styled.div`\r\n    width: 100%;\r\n    background-color: ${({theme}) => theme.color.posterBackground};\r\n`;\r\n\r\nexport const PosterShadowContainer = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 1920px; \r\n    max-height: 770px;\r\n    height: 100%;\r\n    background-image: url(${({ link }) => link});\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    color: ${({theme}) => theme.color.posterFont};\r\n\r\n    @media (max-width: 1368px) {\r\n        background-size: cover;\r\n    }\r\n`;\r\n\r\nexport const PosterBackgroundImageContainer = styled.div`\r\n    background-image: linear-gradient(270deg, #000000 14.11%, rgba(0, 0, 0, 0.873268) 15.08%, rgba(0, 0, 0, 0.720529) 16.51%, rgba(0, 0, 0, 0.294577) 19.99%, rgba(0, 0, 0, 0.159921) 21.88%, rgba(0, 0, 0, 0) 25.68%), linear-gradient(90deg, #000000 13.6%, rgba(0, 0, 0, 0.984059) 14.58%, rgba(0, 0, 0, 0.967732) 15.44%, rgba(0, 0, 0, 0.865569) 16.3%, rgba(0, 0, 0, 0.230315) 22.87%, rgba(0, 0, 0, 0) 26.64%), linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0.689555) 4.66%, rgba(0, 0, 0, 0.439033) 9.34%, rgba(0, 0, 0, 0.20628) 15.16%, rgba(0, 0, 0, 0) 24.22%), linear-gradient(189.44deg, rgba(0, 0, 0, 0) 58.48%, rgba(0, 0, 0, 0.106473) 63.17%, rgba(0, 0, 0, 0.235359) 68.85%, rgba(0, 0, 0, 0.492821) 78.08%, rgba(0, 0, 0, 0.740286) 85.86%, #000000 92.87%);   \r\n`;\r\n\r\nexport const PosterItemsContainer = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 1368px;\r\n    height: 769px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    padding: 56px 0;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 64px;\r\n    line-height: 77px;\r\n    font-weight: 600;\r\n    margin: 0;\r\n`;\r\n\r\nexport const VotesContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 24px 0 16px;\r\n`;\r\n\r\nexport const VoteIcon = styled.img`\r\n    display: block;\r\n    width: 40px;\r\n`;\r\n\r\nexport const VotesAverageBox = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const VotesSmallContent = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n`;\r\n\r\nexport const VotesBigContent = styled.div`\r\n    font-size: 30px;\r\n    font-weight: 500;\r\n    margin: 0 8px;\r\n    line-height: 1;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { movieKey } from '../keys';\r\n\r\nexport const TileContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0px;\r\n    display: flex;\r\n`;\r\n\r\nexport const MobileTileContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 64px auto;\r\n    padding: 40px;\r\n    color: ${({ theme }) => theme.color.mainFont};\r\n    background-color: ${({ theme }) => theme.color.tileBackground};\r\n    box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin: 24px auto;\r\n    padding: 24px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    margin: 16px auto;\r\n    padding: 16px;\r\n    }\r\n`;\r\n\r\nexport const PosterImage = styled.img`\r\n    width: ${({ type }) => type === movieKey ? 312 : 399}px;\r\n    height: ${({ type }) => type === movieKey ? 464 : 564}px;\r\n    border-radius: 5px;\r\n    flex-shrink: 0;\r\n\r\n    ${({ noImage }) => noImage && css`\r\n        background-color: ${({ theme }) => theme.color.noImageBackground};\r\n        background-size: initial;\r\n        background-repeat: no-repeat;\r\n    `}\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: ${({ type }) => type === movieKey ? 228 : 232}px;\r\n        height: ${({ type }) => type === movieKey ? 338 : 326}px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        width: ${({ type }) => type === movieKey ? 114 : 116}px;\r\n        height: ${({ type }) => type === movieKey ? 169 : 163}px;\r\n    }\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    max-height: 100%;\r\n    margin-left: 40px;\r\n    padding: 8px 0;\r\n    display: grid;\r\n    grid-template-rows: ${({ type }) => type === movieKey\r\n        ? \"repeat(6, auto)\"\r\n        : \"repeat(3, auto)\"} 1fr;\r\n    grid-gap: 24px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-left: 24px;\r\n    padding: 8px 0;\r\n    grid-gap: 12px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    margin-left: 16px;\r\n    padding: 0;\r\n    grid-gap: 8px;\r\n    }\r\n\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n    font-size: 36px;\r\n    line-height: 43px;\r\n    font-weight: 600;\r\n    margin: 0;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    font-weight: 500;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    }\r\n`;\r\n\r\nexport const ReselaseYear = styled.p`\r\n    font-size: 22px;\r\n    line-height: 26px;\r\n    margin: 0;\r\n    display: flex;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 13px;\r\n    line-height: 17px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const AdditionalContentContainer = styled.div`\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    display: grid;\r\n    grid-template-rows: repeat(2, auto);\r\n    grid-gap: 8px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const AdditionalContentBox = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const AdditionalContentTitle = styled.div`\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        display: ${({ type }) => type === movieKey\r\n        ? \"none\"\r\n        : \"block\"};\r\n    }\r\n`;\r\n\r\nexport const AdditionalContent = styled.div`\r\n    padding: 0 10px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        padding: ${({ type }) => type === movieKey\r\n        ? \"0\"\r\n        : \"0 10px\"};\r\n        color: ${({ theme }) => theme.color.mainFont};\r\n    }\r\n`;\r\n\r\nexport const GenresBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const Genres = styled.div`\r\n    font-size: 14px;\r\n    line-height: 14px;\r\n    padding: 8px 16px;\r\n    margin: 0 16px 16px 0;\r\n    background-color: ${({ theme }) => theme.color.genresBoxBackground};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 12px;\r\n    line-height: 12px;\r\n    padding: 8px 12px;\r\n    margin: 0 12px 12px 0;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 10px;\r\n    line-height: 11px;\r\n    padding: 8px 8px;\r\n    margin: 0 8px 8px 0;\r\n    }\r\n`;\r\n\r\nexport const VotesContainer = styled.div`\r\n    max-height: 32px;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    font-weight: 400;\r\n    display: flex;\r\n    align-self: end;\r\n    align-items: center;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    max-height: 24px;\r\n    font-size: 13px;\r\n    line-height: 24px;\r\n    }\r\n`;\r\n\r\nexport const VoteIcon = styled.img`\r\n    width: 24px;\r\n    display: block;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 16px;\r\n    }\r\n`;\r\n\r\nexport const VotesBox = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const VotesAverage = styled.div`\r\n    padding: 0 8px;\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n    font-weight: 500;\r\n    line-height: 1;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 13px;\r\n        line-height: 24px;\r\n        font-weight: 600;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        font-size: 13px;\r\n        line-height: 24px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nexport const VotesScale = styled.div`\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        display: none;\r\n        color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const VotesCount = styled.div`\r\n    padding: 0 12px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 0 8px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const Overview = styled.div`\r\n    font-size: 20px;\r\n    line-height: 32px;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const MobileOverview = styled.div`\r\n    display: none;\r\n    padding: 16px 0;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        display: block;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        font-size: 14px;\r\n        line-height: 22px;\r\n        padding: 12px 0;\r\n    }\r\n`;","import styled from \"styled-components\"\r\n\r\nexport const Main = styled.main`\r\n    max-width: 1368px;\r\n    margin: 0 auto;\r\n`","import React from \"react\"\r\nimport { Main } from \"./styled\"\r\n\r\nconst WidthContainer = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n)\r\n\r\nexport default WidthContainer","import React from \"react\";\r\nimport {\r\n    TileContainer,\r\n    MobileTileContainer,\r\n    PosterImage,\r\n    ContentContainer,\r\n    MovieTitle,\r\n    ReselaseYear,\r\n    AdditionalContentContainer,\r\n    AdditionalContentBox,\r\n    AdditionalContentTitle,\r\n    AdditionalContent,\r\n    GenresBox,\r\n    Genres,\r\n    VotesContainer,\r\n    VoteIcon,\r\n    VotesBox,\r\n    VotesAverage,\r\n    VotesScale,\r\n    VotesCount,\r\n    Overview,\r\n    MobileOverview,\r\n} from \"./styled\";\r\nimport voteIcon from \"../voteIcon.svg\";\r\nimport imageBaseLink from \"../imageBaseLink\";\r\nimport WidthContainer from \"../Common/WidthContainer\";\r\nimport { movieKey } from '../keys';\r\nimport noMovieImage from \"../noMovieImage.svg\"\r\nimport noPersonImage from \"../noPersonImage.svg\"\r\n\r\nconst UniversalBigTile = ({ type, content }) => {\r\n    let posterSize = \"\";\r\n    if (type === movieKey) {\r\n        posterSize = \"w342\";\r\n    } else {\r\n        posterSize = \"h632\";\r\n    }\r\n    const tileImageBaseLink = imageBaseLink(posterSize);\r\n\r\n    let defaultDate = \"\";\r\n    let imagePath = \"\";\r\n    if (type === movieKey) {\r\n        defaultDate = content.release_date;\r\n        imagePath = content.poster_path;\r\n    } else {\r\n        defaultDate = content.birthday;\r\n        imagePath = content.profile_path;\r\n    }\r\n    const date = new Date(defaultDate);\r\n\r\n\r\n    return (\r\n        <WidthContainer>\r\n            <MobileTileContainer>\r\n                <TileContainer>\r\n                    <PosterImage\r\n                        src={imagePath !== null ? tileImageBaseLink + imagePath : type === movieKey\r\n                            ? noMovieImage\r\n                            : noPersonImage\r\n                        }\r\n                        alt={type === movieKey ? content.title : content.name}\r\n                        noImage={!content.poster_path}\r\n                        type={type}\r\n                    />\r\n                    <ContentContainer type={type}>\r\n                        <MovieTitle>{content && type === movieKey ? content.title : content.name}</MovieTitle>\r\n                        {defaultDate && content && type && type === movieKey\r\n                            ? <ReselaseYear>{date.getFullYear()}</ReselaseYear>\r\n                            : \"\"}\r\n                        <AdditionalContentContainer>\r\n                            <AdditionalContentBox>\r\n                                <AdditionalContentTitle>\r\n                                    {content && type && type === movieKey ? \"Production:\" : \"Date of birth:\"}\r\n                                </AdditionalContentTitle>\r\n                                <AdditionalContent>\r\n                                    {\r\n                                        content.production_countries && type && type === movieKey\r\n                                            ? content.production_countries !== null ? content.production_countries.map(production_country =>\r\n                                                production_country.name).join(\", \") : \"-\"\r\n                                            : defaultDate !== null ? date.toLocaleDateString() : \"-\"\r\n                                    }\r\n                                </AdditionalContent>\r\n                            </AdditionalContentBox>\r\n                            <AdditionalContentBox>\r\n                                <AdditionalContentTitle>\r\n                                    {content && type === movieKey\r\n                                        ? \"Release date:\"\r\n                                        : \"Place of birth:\"}\r\n                                </AdditionalContentTitle>\r\n                                <AdditionalContent>\r\n                                    {date && type && type === movieKey\r\n                                        ? defaultDate !== null ? date.toLocaleDateString() : \"-\"\r\n                                        : content.place_of_birth !== null ? content.place_of_birth : \"-\"}\r\n                                </AdditionalContent>\r\n                            </AdditionalContentBox>\r\n                        </AdditionalContentContainer>\r\n                        {content && type && type === movieKey\r\n                            ? <GenresBox>\r\n                                {content.genres && content.genres.map(genre =>\r\n                                    <Genres key={genre.id}>{genre.name}</Genres>\r\n                                )}\r\n                            </GenresBox>\r\n                            : \"\"}\r\n                        {content && type && type === movieKey\r\n                            ? <VotesContainer>\r\n                                <VoteIcon src={voteIcon} />\r\n                                <VotesBox>\r\n                                    <VotesAverage>\r\n                                        {content.vote_average}\r\n                                    </VotesAverage>\r\n                                    <VotesScale>\r\n                                        / 10\r\n                                </VotesScale>\r\n                                    <VotesCount>\r\n                                        {content.vote_count} votes\r\n                        </VotesCount>\r\n                                </VotesBox>\r\n                            </VotesContainer>\r\n                            : \"\"}\r\n                        <Overview>\r\n                            {content && type && type === movieKey\r\n                                ? content.overview\r\n                                : content.biography}\r\n                        </Overview>\r\n                    </ContentContainer>\r\n                </TileContainer>\r\n                <MobileOverview>\r\n                    {content && type && type === movieKey\r\n                        ? content.overview\r\n                        : content.biography}\r\n                </MobileOverview>\r\n            </MobileTileContainer>\r\n        </WidthContainer>\r\n    )\r\n}\r\n\r\nexport default UniversalBigTile","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n    PosterBackgrundContainer,\r\n    PosterShadowContainer,\r\n    PosterBackgroundImageContainer,\r\n    PosterItemsContainer,\r\n    Title,\r\n    VotesContainer,\r\n    VotesAverageBox,\r\n    VoteIcon,\r\n    VotesSmallContent,\r\n    VotesBigContent,\r\n\r\n} from './styled';\r\nimport imageBaseLink from \"../imageBaseLink\";\r\nimport voteIcon from \"./voteIcon.svg\";\r\nimport Container from '../Common/Container';\r\nimport Header from '../Common/Header';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport { movieKey, peopleKey } from '../keys';\r\nimport UniversalBigTile from '../UniversalBigTile';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initiateMovieOrPersonFetch, selectMovieCredits, selectMovieDetails, selectStatus } from '../MoviesSlice';\r\nimport LoadingPage from '../Common/LoadingPage';\r\nimport Failed from '../Common/Failed';\r\n\r\nfunction MoviePage() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const posterImageBaseLink = imageBaseLink(\"w1280\");\r\n\r\n    const status = useSelector(selectStatus)\r\n\r\n    useEffect(() => {\r\n        dispatch(initiateMovieOrPersonFetch({\r\n            id: id,\r\n            type: movieKey,\r\n        }))\r\n    }, [])\r\n\r\n    const movieDetails = useSelector(selectMovieDetails);\r\n    const movieCredits = useSelector(selectMovieCredits);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {status === \"failed\" ?\r\n                <Failed />\r\n                :\r\n                \"\"\r\n            }\r\n            {status === \"loading\" ?\r\n                <LoadingPage /> :\r\n                \"\"\r\n            }\r\n            {status === \"success\" ?\r\n                <div>\r\n                    {movieDetails.backdrop_path !== null\r\n                        ? <PosterBackgrundContainer>\r\n                            <PosterShadowContainer link={'\"' + posterImageBaseLink + movieDetails.backdrop_path + '\"'}>\r\n                                <PosterBackgroundImageContainer>\r\n                                    <PosterItemsContainer>\r\n                                        <Title>\r\n                                            {movieDetails.title}\r\n                                        </Title>\r\n                                        <VotesContainer>\r\n                                            <VoteIcon src={voteIcon} alt=\"Vote icon\" />\r\n                                            <VotesAverageBox>\r\n                                                <VotesBigContent>{movieDetails.vote_average}</VotesBigContent>\r\n                                                <VotesSmallContent> / 10</VotesSmallContent>\r\n                                            </VotesAverageBox>\r\n                                        </VotesContainer>\r\n                                        <VotesSmallContent>\r\n                                            {movieDetails.vote_count} votes\r\n                            </VotesSmallContent>\r\n                                    </PosterItemsContainer>\r\n                                </PosterBackgroundImageContainer>\r\n                            </PosterShadowContainer>\r\n                        </PosterBackgrundContainer>\r\n                        : \"\"}\r\n                    <Container>\r\n                        <UniversalBigTile\r\n                            content={movieDetails}\r\n                            type=\"movie\"\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header text={\"Cast\"} />\r\n                        <GridTemplate\r\n                            content={movieCredits.cast}\r\n                            type={peopleKey}\r\n                            castAndCrew=\"cast\"\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header text={\"Crew\"} />\r\n                        <GridTemplate\r\n                            content={movieCredits.crew}\r\n                            type={peopleKey}\r\n                            castAndCrew=\"crew\"\r\n                        />\r\n                    </Container>\r\n                </div> :\r\n                \"\"\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviePage;","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Container from '../Common/Container';\r\nimport Header from '../Common/Header';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport { moviesKey, personKey } from '../keys';\r\nimport UniversalBigTile from '../UniversalBigTile';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initiateMovieOrPersonFetch, selectPersonCredits, selectPersonDetails, selectStatus } from '../MoviesSlice';\r\nimport LoadingPage from '../Common/LoadingPage';\r\nimport Failed from '../Common/Failed';\r\n\r\nfunction MoviePage() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(initiateMovieOrPersonFetch({\r\n            id: id,\r\n            type: personKey,\r\n        }))\r\n    }, [id, personKey, dispatch])\r\n\r\n    const personDetails = useSelector(selectPersonDetails);\r\n    const personCredits = useSelector(selectPersonCredits);\r\n\r\n    const status = useSelector(selectStatus);\r\n\r\n    return (\r\n        <div>\r\n            {status === \"failed\" ?\r\n                <Failed />\r\n                :\r\n                \"\"\r\n            }\r\n            {status === \"loading\" ?\r\n                <LoadingPage /> :\r\n                \"\"\r\n            }\r\n            {status === \"success\" ?\r\n                <div>\r\n                    <Container>\r\n                        <UniversalBigTile\r\n                            content={personDetails}\r\n                            type={personKey}\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header text={`Movies - cast(${personCredits.cast && personCredits.cast.length})`} />\r\n                        <GridTemplate\r\n                            content={personCredits.cast}\r\n                            type={moviesKey}\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header text={`Movies - Crew(${personCredits.crew && personCredits.crew.length})`} />\r\n                        <GridTemplate\r\n                            content={personCredits.crew}\r\n                            type={moviesKey}\r\n                        />\r\n                    </Container>\r\n                </div> :\r\n                \"\"\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Movies from \"./Movies/index\";\r\nimport People from \"./People/index\";\r\nimport NavLogoButton from \"./NavLogoButton/index\";\r\nimport Browser from \"./Browser/index\";\r\nimport { BackgroundContainer, StyledNavLink, StyledNavLinkLogo, NavList, NavListItem, NavContainer } from \"./styled\";\r\nimport MoviePage from './MoviePage';\r\nimport PersonPage from './PersonPage';\r\nimport WidthContainer from './Common/WidthContainer';\r\n\r\nexport default () => (\r\n  <HashRouter>\r\n    <nav>\r\n      <BackgroundContainer>\r\n        <WidthContainer>\r\n          <NavList>\r\n            <NavContainer>\r\n              <NavListItem>\r\n                <StyledNavLinkLogo to=\"/movies\"><NavLogoButton /></StyledNavLinkLogo>\r\n              </NavListItem>\r\n              <NavListItem>\r\n                <StyledNavLink to=\"/movies\">MOVIES</StyledNavLink>\r\n              </NavListItem>\r\n              <NavListItem>\r\n                <StyledNavLink to=\"/people\">PEOPLE</StyledNavLink>\r\n              </NavListItem>\r\n            </NavContainer>\r\n            <Browser />\r\n          </NavList>\r\n        </WidthContainer>\r\n      </BackgroundContainer>\r\n      <Switch>\r\n        <Route path=\"/movies/:id\">\r\n          <MoviePage />\r\n        </Route>\r\n        <Route path=\"/people/:id\">\r\n          <PersonPage />\r\n        </Route>\r\n        <Route path=\"/movies\">\r\n          <Movies />\r\n        </Route>\r\n        <Route path=\"/people\">\r\n          <People />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Redirect to=\"/movies\" />\r\n        </Route>\r\n      </Switch>\r\n    </nav>\r\n  </HashRouter>\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const theme = {\r\n    color: {\r\n        black: \"#18181B\",\r\n        background: \"#E5E5E5\",\r\n        pagerButton: \"#D6E4FF\",\r\n        pagerButtonDisabled: \"#E4E6F0\",\r\n        pageText: \"#7E839A\",\r\n        posterBackground: \"#000000\",\r\n        posterFont: \"#ffffff\",\r\n        mainFont: \"#000000\",\r\n        secondaryFont: \"#7E839A\",\r\n        genresBoxBackground: \"#E4E6F0\",\r\n        tileBackground: \"#ffffff\",\r\n        refreshButtonFont: \"#ffffff\",\r\n        refreshButtonBackground: \"#0044CC\",\r\n        noImageBackground: \"#C4C4C4\",\r\n        jobOrCharacterName: \"#7E839A\"\r\n    },\r\n    breakpoint: {\r\n        noContainer: 1400,\r\n        mobileMax: 767,\r\n        mobile: 500,\r\n    },\r\n};","import Axios from \"axios\";\r\nimport { apiKey } from \"./keys\"\r\n\r\nexport const fetchFromApi = async (link, page, query) => {\r\n\r\n    const queryIfExist = query ? { query: query } : \"\"\r\n\r\n    try {\r\n        const response = await Axios.get(link, {\r\n            params: {\r\n                api_key: apiKey,\r\n                page: page,\r\n                ...queryIfExist\r\n\r\n            }\r\n        })\r\n        return await response.data;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import { put, debounce, call, takeLatest, delay } from \"redux-saga/effects\"\r\nimport { fetchFromApi } from \"./fetchFromApi\"\r\nimport {\r\n    fetchGenresList,\r\n    initiateFetch,\r\n    initiateMovieOrPersonFetch,\r\n    inputChange,\r\n    setGenres,\r\n    setMovieCredits,\r\n    setMovieDetails,\r\n    setPageInformation,\r\n    setPersonCredits,\r\n    setPersonDetails,\r\n    setQueryString,\r\n    setStatus\r\n} from \"./MoviesSlice\"\r\nimport { apiKey, movieKey, moviesKey, peopleKey, personKey } from \"./keys\"\r\nimport Axios from \"axios\"\r\n\r\nfunction* fetchHandler(action) {\r\n    yield put(setStatus(\"loading\"))\r\n    const page = yield action.payload.page\r\n    const type = yield action.payload.type\r\n    const query = yield action.payload.query\r\n    yield delay(300)\r\n    if (query) {\r\n        if (type === moviesKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/search/movie??\", page, query)\r\n                yield put(setPageInformation(data))\r\n                yield put(setStatus(\"success\"))\r\n            } catch (error) {\r\n                yield put(setStatus(\"failed\"))\r\n            };\r\n        }\r\n        if (type === peopleKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/search/person?\", page, query)\r\n                yield put(setPageInformation(data))\r\n                yield put(setStatus(\"success\"))\r\n            } catch (error) {\r\n                yield put(setStatus(\"failed\"))\r\n            };\r\n        }\r\n    } else {\r\n        if (type === moviesKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/movie/popular?\", page)\r\n                yield put(setPageInformation(data))\r\n                yield put(setStatus(\"success\"))\r\n            }\r\n            catch (error) {\r\n                yield put(setStatus(\"failed\"))\r\n            }\r\n        }\r\n        if (type === peopleKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/person/popular?\", page)\r\n                yield put(setPageInformation(data))\r\n                yield put(setStatus(\"success\"))\r\n            }\r\n            catch (error) {\r\n                yield put(setStatus(\"failed\"))\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction* inputChangeHandler(action) {\r\n    const payload = yield action.payload\r\n    yield put(setQueryString(payload))\r\n}\r\n\r\nexport function* MoviesSaga() {\r\n    yield takeLatest(initiateFetch.type, fetchHandler)\r\n    yield debounce(1000, inputChange.type, inputChangeHandler)\r\n}\r\n\r\nfunction* fetchGenresFromAPI() {\r\n    try {\r\n        const response = yield Axios.get(\"https://api.themoviedb.org/3/genre/movie/list?\", {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n        yield put(setGenres(response.data));\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* setGenresList() {\r\n    yield takeLatest(fetchGenresList.type, fetchGenresFromAPI)\r\n}\r\n\r\n\r\nfunction* fetchMovieOrPersonData(action) {\r\n    yield put(setStatus(\"loading\"))\r\n    yield delay(300)\r\n    const id = yield action.payload.id\r\n    const type = yield action.payload.type\r\n    try {\r\n        switch (type) {\r\n            case movieKey:\r\n                const movieDetailsData = yield Axios.get(`https://api.themoviedb.org/3/movie/${id}?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                })\r\n                yield put(setMovieDetails(movieDetailsData.data));\r\n\r\n                const movieCreditsData = yield Axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                })\r\n                yield put(setMovieCredits(movieCreditsData.data));\r\n                yield put(setStatus(\"success\"))\r\n                break;\r\n            case personKey:\r\n                const personDetailsData = yield Axios.get(`https://api.themoviedb.org/3/person/${id}?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                })\r\n                yield put(setPersonDetails(personDetailsData.data));\r\n                const personCreditsData = yield Axios.get(`https://api.themoviedb.org/3/person/${id}/movie_credits?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                })\r\n                yield put(setPersonCredits(personCreditsData.data));\r\n                yield put(setStatus(\"success\"))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    } catch (error) {\r\n        yield put(setStatus(\"failed\"))\r\n    }\r\n}\r\n\r\nexport function* fetchMoviesAndPeopleFromAPI() {\r\n    yield takeLatest(initiateMovieOrPersonFetch.type, fetchMovieOrPersonData)\r\n}","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport moviesSlice from \"./MoviesSlice\"\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport { fetchMoviesAndPeopleFromAPI, MoviesSaga, setGenresList } from \"./MoviesSaga\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        movies: moviesSlice\r\n    },\r\n    middleware: [sagaMiddleware]\r\n}\r\n)\r\n\r\nsagaMiddleware.run(MoviesSaga)\r\nsagaMiddleware.run(setGenresList)\r\nsagaMiddleware.run(fetchMoviesAndPeopleFromAPI)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\"\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { theme } from \"./theme\";\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}