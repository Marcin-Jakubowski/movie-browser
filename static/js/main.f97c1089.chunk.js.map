{"version":3,"sources":["Common/Pager/arrow.svg","Common/Pager/disabledArrow.svg","NavLogoButton/navLogo.svg","GlobalStyle.js","Movies/MoviesSlice.js","Movies/useAPI.js","apiKey.js","Common/Container/styled.js","Common/Container/index.js","Common/GridTemplate/styled.js","Common/GridTemplate/index.js","Common/Header/styled.js","Common/Header/index.js","Common/Pager/styled.js","Common/Pager/index.js","Movies/index.js","People/index.js","NavLogoButton/styled.js","NavLogoButton/index.js","Browser/styled.js","Browser/index.js","styled.js","App.js","serviceWorker.js","theme.js","store.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","moviesSlice","createSlice","name","initialState","selectedPage","pageInformations","page","results","total_results","total_pages","reducers","setPageInformation","state","payload","setSelectedPage","actions","selectMovies","movies","selectSelectedPage","selectPageInformation","useAPI","apiLink","dispatch","useDispatch","data","useSelector","getData","a","axios","get","params","api_key","response","console","log","useEffect","Main","styled","main","theme","breakpoint","mobileMax","Container","children","Wrapper","section","type","css","GridTemplate","content","map","fragment","title","StyledHeader","h2","Header","text","nav","ButtonContainer","div","TextContainer","color","pageText","Counter","strong","black","Button","button","pagerButton","pagerButtonDisabled","TextToHide","span","Img","img","left","second","Pager","maxPage","disabled","onClick","src","disabledArrow","arrow","alt","Movies","popularMovies","People","popularPeople","NavButton","NavLogo","NavContent","NavLogoButton","navLogo","BrowserInput","input","Browser","placeholder","StyledNavLink","NavLink","attrs","activeClassName","StyledNavLinkLogo","NavListItem","li","NavList","ul","NavContainer","to","path","Boolean","window","location","hostname","match","store","configureStore","reducer","ReactDOM","render","StrictMode","background","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f97c1089.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.184cc848.svg\";","module.exports = __webpack_public_path__ + \"static/media/disabledArrow.007c9ce9.svg\";","module.exports = __webpack_public_path__ + \"static/media/navLogo.542bbc90.svg\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Poppins', sans-serif;\r\n        background: #E5E5E5;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst moviesSlice = createSlice({\r\n    name: \"movies\",\r\n    initialState: {\r\n        selectedPage: 1,\r\n        pageInformations: {\r\n            page: 0,\r\n            results: [],\r\n            total_results: 0,\r\n            total_pages: 0\r\n        }\r\n    },\r\n    reducers: {\r\n        setPageInformation: (state, { payload }) => {\r\n            state.pageInformations = payload\r\n        },\r\n        setSelectedPage: (state, { payload }) => {\r\n            switch (payload) {\r\n                case \"first\":\r\n                    state.selectedPage = 1;\r\n                    break;\r\n                case \"previous\":\r\n                    state.selectedPage--\r\n                    break;\r\n                case \"next\":\r\n                    state.selectedPage++\r\n                    break;\r\n                default:\r\n                    state.selectedPage = payload\r\n            }\r\n        }\r\n    }\r\n}\r\n)\r\n\r\nexport const {\r\n    setPageInformation,\r\n    setSelectedPage\r\n} = moviesSlice.actions\r\n\r\nexport const selectMovies = state => state.movies\r\nexport const selectSelectedPage = state => selectMovies(state).selectedPage\r\nexport const selectPageInformation = state => selectMovies(state).pageInformations\r\nexport default moviesSlice.reducer","import axios from \"axios\"\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { apiKey } from \"../apiKey\"\r\nimport { selectPageInformation, setPageInformation } from \"./MoviesSlice\"\r\n\r\n\r\nexport const useAPI = (page, apiLink) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(selectPageInformation)\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const response = await axios.get(apiLink, {\r\n                params: {\r\n                    api_key: apiKey,\r\n                    page: page\r\n                }\r\n            })\r\n            dispatch(setPageInformation(response.data));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    useEffect(() => { getData(page) }, [page]);\r\n    return data.results;\r\n}","export const apiKey = \"58fae116de8a1e6752562cf781d6d14a\"","import styled from \"styled-components\"\r\n\r\nexport const Main = styled.main`\r\n    max-width: 1324px;\r\n    margin: 56px auto;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n          max-width: unset;\r\n          width: calc(100% - 16px);\r\n          margin: 24px 16px;\r\n        }\r\n`","import React from \"react\"\r\nimport { Main } from \"./styled\"\r\n\r\nconst Container = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n)\r\n\r\nexport default Container","import styled, { css } from \"styled-components\"\r\n\r\nexport const Wrapper = styled.section`\r\n    width: 100%;\r\n    min-height: 1391px;\r\n    display: grid;\r\n    grid-gap: 24px;\r\n\r\n    ${({ type }) => type === \"movies\" && css`\r\n        grid-template-columns: repeat(4, 1fr);\r\n        grid-auto-rows: 650px;\r\n\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: 1fr;\r\n            grid-auto-rows: 201px;\r\n            grid-gap: 16px 0;\r\n        }\r\n`}\r\n\r\n    ${({ type }) => type === \"people\" && css`\r\n        grid-template-columns: repeat(6, 1fr);\r\n        grid-auto-rows: 339px;\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: repeat(2, 1fr);\r\n            grid-auto-rows: 245px;\r\n            grid-gap: 16px;}\r\n    `}\r\n\r\n`","import React from \"react\"\r\nimport { Wrapper } from \"./styled\"\r\n\r\nconst GridTemplate = ({ content, type }) => {\r\n  return (\r\n    <Wrapper\r\n      type={type}\r\n    >\r\n      {content.map((fragment) => (\r\n        <div>\r\n          {type === \"movies\" ? fragment.title : fragment.name}\r\n        </div>)\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default GridTemplate\r\n\r\n\r\n\r\n","import styled from \"styled-components\"\r\n\r\nexport const StyledHeader = styled.h2`\r\n    font-size: 36px;\r\n    font-weight: 600;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n           font-size: 18px;\r\n        }\r\n`\r\n","import React from \"react\"\r\nimport { StyledHeader } from \"./styled\"\r\n\r\nconst Header = ({ text }) => (\r\n    <StyledHeader>\r\n        {text}\r\n    </StyledHeader>\r\n)\r\n\r\nexport default Header","import styled, { css } from \"styled-components\"\r\n\r\nexport const Wrapper = styled.nav`\r\n    display: flex;\r\n    width: 530px;\r\n    height: 36px;\r\n    margin: 40px auto;\r\n    justify-content: space-between;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            width: 250px;\r\n            margin: 32px auto;\r\n        }\r\n`\r\n\r\nexport const ButtonContainer = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 -6px;\r\n`\r\n\r\nexport const TextContainer = styled.div`\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    padding: 8px 18px;\r\n    color: ${({ theme }) => theme.color.pageText};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            font-size: 10px;\r\n            padding: 7.5px 8px\r\n        }\r\n`\r\nexport const Counter = styled.strong`\r\n    display: inline-block;\r\n    margin: 0 8px;\r\n    color: ${({ theme }) => theme.color.black};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            margin: 0 2px\r\n        }\r\n`\r\n\r\nexport const Button = styled.button`\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.color.pagerButton};\r\n    margin: 0 6px;\r\n    border: none;\r\n\r\n    &:hover {\r\n        filter: brightness(105%);\r\n    };\r\n\r\n    &:focus {\r\n    filter: brightness(110%);\r\n    outline: none;\r\n    }\r\n\r\n    &:active {\r\n    filter: brightness(115%);\r\n    outline: none;\r\n    }\r\n\r\n    &:disabled {\r\n        background-color: ${({ theme }) => theme.color.pagerButtonDisabled};\r\n        color: ${({ theme }) => theme.color.black};\r\n        filter: none;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            padding: 7.5px 12px;\r\n            font-size: 5px;\r\n            margin: 0 4px;\r\n        }\r\n\r\n`\r\n\r\nexport const TextToHide = styled.span`\r\n     @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            display: none;\r\n        }\r\n`\r\n\r\nexport const Img = styled.img`\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin-left: 2px;\r\n    }\r\n\r\n    ${({ left }) => left && css`\r\n        transform: rotateY(180deg);\r\n        margin-right: 4px;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            margin-right: 2px;\r\n        }\r\n\r\n    `\r\n    }\r\n\r\n    ${({ second }) => second && css`\r\n        display: none;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            display: inline-block;\r\n        }\r\n        \r\n    ` }\r\n\r\n`\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectPageInformation, selectSelectedPage, setSelectedPage } from \"../../Movies/MoviesSlice\"\r\nimport { Wrapper, ButtonContainer, Button, TextContainer, Counter, Img, TextToHide } from \"./styled\"\r\nimport arrow from \"./arrow.svg\"\r\nimport disabledArrow from \"./disabledArrow.svg\"\r\n\r\nconst Pager = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const page = useSelector(selectSelectedPage)\r\n    const currentPageInformation = useSelector(selectPageInformation)\r\n\r\n    const maxPage = currentPageInformation.total_pages\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={page === 1}\r\n                    onClick={() => dispatch(setSelectedPage(\"first\"))}\r\n                >\r\n                    <Img\r\n                        src={page === 1 ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        Last\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={page === 1 ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                        second\r\n                    ></Img>\r\n\r\n                </Button>\r\n                <Button\r\n                    disabled={page === 1}\r\n                    onClick={() => dispatch(setSelectedPage(\"previous\"))}\r\n                >\r\n                    <Img\r\n                        src={page === 1 ? disabledArrow : arrow}\r\n                        alt=\"Previous page\"\r\n                        left\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        Previous\r\n                    </TextToHide>\r\n                </Button>\r\n            </ButtonContainer>\r\n            <TextContainer>\r\n                Page\r\n                <Counter>\r\n                    {page}\r\n                </Counter>\r\n                of\r\n                <Counter>\r\n                    {maxPage}\r\n                </Counter>\r\n            </TextContainer>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={page === maxPage}\r\n                    onClick={() => dispatch(setSelectedPage(\"next\"))}\r\n\r\n                >\r\n                    <TextToHide>\r\n                        Next\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={page === maxPage ? disabledArrow : arrow}\r\n                        alt=\"Next page\"\r\n                    ></Img>\r\n                </Button>\r\n                <Button\r\n                    disabled={page === maxPage}\r\n                    onClick={() => dispatch(setSelectedPage(maxPage))}\r\n                >\r\n                    <Img\r\n                        src={page === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                        second\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        Last\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={page === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                    ></Img>\r\n                </Button>\r\n            </ButtonContainer>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Pager","import React, { useEffect } from 'react';\r\nimport { useAPI } from \"./useAPI\"\r\nimport Container from '../Common/Container';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport Header from '../Common/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSelectedPage, setSelectedPage } from './MoviesSlice';\r\nimport Pager from '../Common/Pager';\r\n\r\n\r\nfunction Movies() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const page = useSelector(selectSelectedPage)\r\n\r\n  useEffect(() => { dispatch(setSelectedPage(\"first\")) }, [])\r\n\r\n  const popularMovies = useAPI(page, \"https://api.themoviedb.org/3/movie/popular?\")\r\n\r\n  return (\r\n    <Container>\r\n      <Header text={\"Popular Movies\"} />\r\n      <GridTemplate\r\n        content={popularMovies}\r\n        type={\"movies\"}\r\n      />\r\n      <Pager />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Movies;","import React, { useEffect } from 'react';\r\nimport { useAPI } from \"../Movies/useAPI\"\r\nimport Container from '../Common/Container';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport Header from '../Common/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSelectedPage, setSelectedPage } from '../Movies/MoviesSlice';\r\nimport Pager from '../Common/Pager';\r\n\r\n\r\nfunction People() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const page = useSelector(selectSelectedPage)\r\n\r\n  useEffect(() => { dispatch(setSelectedPage(\"first\")) }, [])\r\n\r\n  const popularPeople = useAPI(page, \"https://api.themoviedb.org/3/person/popular?\")\r\n\r\n  return (\r\n    <Container>\r\n      <Header text={\"Popular People\"} />\r\n      <GridTemplate\r\n        content={popularPeople}\r\n        type={\"people\"}\r\n      />\r\n      <Pager />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default People;","import styled from \"styled-components\";\r\n\r\nexport const NavButton = styled.button`\r\n    color: white;\r\n    background-color: black;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 50px 0 0;\r\n`;\r\n\r\nexport const NavLogo = styled.img`\r\n    display: block;\r\n    padding: 0 5px;\r\n`;\r\n\r\nexport const NavContent = styled.span`\r\n    display: block;\r\n    padding: 0 8px;\r\n    font-size: 21px;\r\n\r\n    &:link {\r\n        text-decoration: none;\r\n    }\r\n`;","import React from 'react';\r\nimport { NavButton, NavContent, NavLogo } from \"./styled\"\r\nimport navLogo from \"./navLogo.svg\"\r\n\r\nfunction NavLogoButton() {\r\n\r\n    return (\r\n        <NavButton>\r\n            <NavLogo src={navLogo} alt=\"Navigation Logo\" />\r\n            <NavContent>Movies Browser</NavContent>\r\n        </NavButton>\r\n    );\r\n};\r\n\r\nexport default NavLogoButton;","import styled from \"styled-components\";\r\n\r\nexport const BrowserInput = styled.input`\r\n    line-height: 24px;\r\n    padding: 12px;\r\n    border-radius: 24px;\r\n    width: 432px;\r\n    justify-self: end;\r\n`;","import React from 'react';\r\nimport { BrowserInput } from \"./styled\"\r\n\r\nfunction Browser() {\r\n\r\n    return (\r\n        <BrowserInput\r\n            placeholder=\"Search for movies...\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default Browser;","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst activeClassName = \"active\";\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding: 13.5px 20px;\r\n    \r\n    &.${activeClassName} {\r\n        border: 1px solid white;\r\n        border-radius: 24px;\r\n    }\r\n    &:link {\r\n        color: white\r\n    }\r\n`;\r\n\r\nexport const StyledNavLinkLogo = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    color: white;\r\n    padding: 13.5px;\r\n\r\n    &:link {\r\n        color: white\r\n    }\r\n`;\r\n\r\nexport const NavListItem = styled.li`\r\n    padding: 10px 0px;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n    list-style: none;\r\n    background-color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0;\r\n    height: 94px;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n    width: 1368px;\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto) 1fr;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n`;","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport Movies from \"./Movies/index\";\r\nimport People from \"./People/index\";\r\nimport NavLogoButton from \"./NavLogoButton/index\";\r\nimport Browser from \"./Browser/index\";\r\nimport { StyledNavLink, StyledNavLinkLogo, NavList, NavListItem, NavContainer } from \"./styled\";\r\n\r\nexport default () => (\r\n  <HashRouter>\r\n    <nav>\r\n      <NavList>\r\n        <NavContainer>\r\n          <NavListItem>\r\n            <StyledNavLinkLogo to=\"/movies\"><NavLogoButton /></StyledNavLinkLogo>\r\n          </NavListItem>\r\n          <NavListItem>\r\n            <StyledNavLink to=\"/movies\">MOVIES</StyledNavLink>\r\n          </NavListItem>\r\n          <NavListItem>\r\n            <StyledNavLink to=\"/people\">PEOPLE</StyledNavLink>\r\n          </NavListItem>\r\n          <Browser />\r\n        </NavContainer>\r\n      </NavList>\r\n      <Switch>\r\n        <Route path=\"/movies\">\r\n          <Movies />\r\n        </Route>\r\n        <Route path=\"/people\">\r\n          <People />\r\n        </Route>\r\n      </Switch>\r\n    </nav>\r\n  </HashRouter>\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const theme = {\r\n    color: {\r\n        black: \"#18181B\",\r\n        background: \"#E5E5E5\",\r\n        pagerButton: \"#D6E4FF\",\r\n        pagerButtonDisabled: \"#E4E6F0\",\r\n        pageText: \"#7E839A\"\r\n\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n};","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport moviesSlice from \"./Movies/MoviesSlice\"\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        movies: moviesSlice\r\n    }\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\"\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { theme } from \"./theme\";\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}