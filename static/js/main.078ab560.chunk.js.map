{"version":3,"sources":["assets/arrow.svg","assets/disabledArrow.svg","assets/voteIcon.svg","assets/noMovieImage.svg","assets/noPersonImage.svg","assets/loadingRing.svg","assets/noResultsImage.svg","assets/failedIcon.svg","assets/AdultIcon.svg","assets/browserLogo.svg","assets/navLogo.svg","serviceWorker.js","MoviesSlice.js","functionsAndKeys/keys.js","functionsAndKeys/fetchFromApi.js","MoviesSaga.js","store.js","GlobalStyle.js","theme.js","useQueryParameter.js","Common/ToggleThemeButton/styled.js","Common/ToggleThemeButton/index.js","Common/Container/styled.js","Common/Container/index.js","functionsAndKeys/imageBaseLink.js","tiles/MovieSmallTile/styled.js","tiles/MovieSmallTile/index.js","tiles/PersonTile/styled.js","tiles/PersonTile/index.js","Common/GridListItem/styled.js","Common/GridListItem/index.js","Common/GridTemplate/styled.js","Common/GridTemplate/index.js","Common/Header/styled.js","Common/Header/index.js","Common/LoadingPage/styled.js","Common/LoadingPage/index.js","Common/NoResults/styled.js","Common/NoResults/index.js","Common/Failed/styled.js","Common/Failed/index.js","useReplaceQueryParameter.js","Common/Pager/styled.js","Common/Pager/index.js","features/Movies/index.js","features/People/index.js","tiles/UniversalBigTile/styled.js","tiles/UniversalBigTile/index.js","Common/AdultContent/styled.js","Common/AdultContent/index.js","features/MoviePage/styled.js","features/MoviePage/index.js","features/PersonPage/index.js","features/Browser/useSearchByQuery.js","features/Browser/styled.js","features/Browser/index.js","Common/NavLogoButton/styled.js","Common/NavLogoButton/index.js","Common/WidthContainer/styled.js","Common/WidthContainer/index.js","styled.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","moviesSlice","createSlice","name","initialState","pageInformations","page","results","total_results","total_pages","movieDetails","movieCredits","personDetails","personCredits","genres","queryString","status","themeStatus","JSON","parse","localStorage","getItem","adult","reducers","initiateFetch","payload","setStatus","state","setPageInformation","setMovieDetails","setMovieCredits","setPersonDetails","setPersonCredits","setGenres","fetchGenresList","initiateMovieOrPersonFetch","inputChange","setQueryString","toggleThemeStatus","setItem","stringify","setAdult","actions","selectMovies","movies","selectStatus","selectPageInformation","selectMovieDetails","selectMovieCredits","selectPersonDetails","selectPersonCredits","selectGenres","selectQueryString","selectThemeStatus","selectAdult","apiKey","fetchFromApi","link","query","a","queryIfExist","Axios","get","params","api_key","response","data","fetchHandler","inputChangeHandler","MoviesSaga","fetchGenresFromAPI","setGenresList","fetchMovieOrPersonData","fetchMoviesAndPeopleFromAPI","action","type","delay","call","put","takeLatest","debounce","id","movieDetailsData","movieCreditsData","personDetailsData","personCreditsData","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","run","GlobalStyle","createGlobalStyle","theme","color","background","black","boxShadow","pagerButton","pagerButtonDisabled","pageText","posterBackground","posterFont","mainFont","secondaryFont","genresBoxBackground","tileBackground","refreshButtonFont","refreshButtonBackground","noImageBackground","jobOrCharacterName","ShowMoreButton","adultButton","themeButtonFont","themeButtonBackground","themeButtonItem","navigationBackground","navigationFont","breakpoint","noContainer","tabletMax","mobileMax","mobile","mobileMin","transform","toggleTheme","darkTheme","useQueryParameter","param","useLocation","URLSearchParams","search","ButtonContainer","styled","div","Content","Button","button","ButtonItem","ToggleThemeButton","dispatch","useDispatch","onClick","Main","main","Container","children","ImageBaseLink","size","TileContainer","ContentContainer","PosterImage","img","noImage","css","MovieTitle","h3","ReselaseYear","h4","Genres","GenresBox","VotesBox","VoteIcon","VotesAverage","VotesCount","MovieSmallTile","content","tileImageBaseLink","imageBaseLink","date","Date","release_date","useSelector","src","poster_path","alt","title","getFullYear","genre_ids","map","genre_id","genre","key","voteIcon","vote_average","vote_count","section","StyledImage","Icon","Name","JobOrCharacterName","PersonTile","person","castAndCrew","imageLink","profile_path","character","job","GridLink","Link","GridListItem","fragment","toHide","showMore","to","Grid","ul","GridTemplate","genresData","useState","setShowMore","credit_id","i","indexOf","length","StyledHeader","h2","Header","text","ImageContainer","LoadingPage","loadingRing","NoResults","noResultsImage","MainHeader","SmallHeader","StyledLink","Failed","icon","useReplaceQueryParameter","history","useHistory","value","searchParams","set","delete","push","toString","Wrapper","nav","TextContainer","Counter","strong","TextToHide","span","Img","left","second","Pager","replaceQueryParameter","maxPage","pageNumber","Number","onClickButton","disabled","arrow","disabledArrow","Movies","useEffect","People","people","MobileTileContainer","Title","AdditionalContentContainer","AdditionalContentBox","AdditionalContentTitle","AdditionalContent","VotesContainer","VotesScale","Overview","LongOverview","MobileOverview","UniversalBigTile","defaultDate","imagePath","birthday","noMovieImage","noPersonImage","production_countries","production_country","join","toLocaleDateString","place_of_birth","overview","biography","AdultContent","PosterBackgrundContainer","PosterBackgroundImageContainer","PosterShadowContainer","PosterItemsContainer","VotesAverageBox","VotesSmallContent","VotesBigContent","MoviePage","useParams","posterImageBaseLink","backdrop_path","cast","crew","useSearchByQuery","pathname","includes","queryValue","trim","undefined","BrowserContainer","BrowserLogo","BrowserInput","input","Browser","setValue","searchByQuery","browserLogo","placeholder","onChange","target","NavButton","NavLogo","NavContent","h1","NavLogoButton","navLogo","WidthContainer","BackgroundContainer","StyledNavLink","NavLink","attrs","activeClassName","StyledNavLinkLogo","NavListItem","li","NavList","NavContainer","App","path","PersonPage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.078ab560.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.e60b915f.svg\";","module.exports = __webpack_public_path__ + \"static/media/disabledArrow.23600f04.svg\";","module.exports = __webpack_public_path__ + \"static/media/voteIcon.cb060445.svg\";","module.exports = __webpack_public_path__ + \"static/media/noMovieImage.6567811f.svg\";","module.exports = __webpack_public_path__ + \"static/media/noPersonImage.b8131d25.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadingRing.2bd28db1.svg\";","module.exports = __webpack_public_path__ + \"static/media/noResultsImage.15978f48.svg\";","module.exports = __webpack_public_path__ + \"static/media/failedIcon.adbea4d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/AdultIcon.2a14c159.svg\";","module.exports = __webpack_public_path__ + \"static/media/browserLogo.673cea5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/navLogo.542bbc90.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst moviesSlice = createSlice({\r\n    name: \"movies\",\r\n    initialState: {\r\n        pageInformations: {\r\n            page: 0,\r\n            results: [],\r\n            total_results: 0,\r\n            total_pages: 0\r\n        },\r\n        movieDetails: [],\r\n        movieCredits: [],\r\n        personDetails: [],\r\n        personCredits: [],\r\n        genres: [],\r\n        queryString: \"initial\",\r\n        status: \"loading\",\r\n        themeStatus: JSON.parse(localStorage.getItem(\"theme\")) || false,\r\n        adult: false\r\n\r\n    },\r\n    reducers: {\r\n        initiateFetch: ({ payload }) => {\r\n\r\n        },\r\n        setStatus: (state, { payload }) => {\r\n            state.status = payload;\r\n        },\r\n        setPageInformation: (state, { payload }) => {\r\n            state.pageInformations = payload;\r\n        },\r\n        setMovieDetails: (state, { payload }) => {\r\n            state.movieDetails = payload;\r\n        },\r\n        setMovieCredits: (state, { payload }) => {\r\n            state.movieCredits = payload;\r\n        },\r\n        setPersonDetails: (state, { payload }) => {\r\n            state.personDetails = payload;\r\n        },\r\n        setPersonCredits: (state, { payload }) => {\r\n            state.personCredits = payload;\r\n        },\r\n        setGenres: (state, { payload }) => {\r\n            state.genres = payload;\r\n        },\r\n        fetchGenresList: () => { },\r\n        initiateMovieOrPersonFetch: () => {\r\n\r\n        },\r\n        inputChange: ({ payload }) => {\r\n\r\n        },\r\n        setQueryString: (state, { payload }) => {\r\n            state.queryString = payload;\r\n        },\r\n        toggleThemeStatus: state => {\r\n            state.themeStatus = !state.themeStatus;\r\n            localStorage.setItem(\"theme\", JSON.stringify(state.themeStatus));\r\n        },\r\n        setAdult: (state) => {\r\n            state.adult = true;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    initiateFetch,\r\n    setPageInformation,\r\n    setMovieDetails,\r\n    setMovieCredits,\r\n    setPersonDetails,\r\n    setPersonCredits,\r\n    setGenres,\r\n    fetchGenresList,\r\n    initiateMovieOrPersonFetch,\r\n    inputChange,\r\n    setQueryString,\r\n    setAdult,\r\n    setStatus,\r\n    toggleThemeStatus,\r\n} = moviesSlice.actions\r\n\r\nexport const selectMovies = state => state.movies;\r\nexport const selectType = state => selectMovies(state).type;\r\nexport const selectStatus = state => selectMovies(state).status;\r\nexport const selectPageInformation = state => selectMovies(state).pageInformations;\r\nexport const selectMovieDetails = state => selectMovies(state).movieDetails;\r\nexport const selectMovieCredits = state => selectMovies(state).movieCredits;\r\nexport const selectPersonDetails = state => selectMovies(state).personDetails;\r\nexport const selectPersonCredits = state => selectMovies(state).personCredits;\r\nexport const selectGenres = state => selectMovies(state).genres;\r\nexport const selectQueryString = state => selectMovies(state).queryString;\r\nexport const selectThemeStatus = state => selectMovies(state).themeStatus;\r\nexport const selectAdult = state => selectMovies(state).adult;\r\nexport default moviesSlice.reducer;","export const apiKey = \"58fae116de8a1e6752562cf781d6d14a\";\r\n\r\nexport const moviesKey = \"movies\";\r\nexport const peopleKey = \"people\";\r\n\r\nexport const movieKey = \"movie\";\r\nexport const personKey = \"person\";\r\n\r\nexport const searchKey = \"search\";\r\nexport const pageKey = \"page\";","import Axios from \"axios\";\r\nimport { apiKey } from \"./keys\";\r\n\r\nexport const fetchFromApi = async (link, page, query) => {\r\n    const queryIfExist = query ? { query: query } : \"\";\r\n\r\n    try {\r\n        const response = await Axios.get(link, {\r\n            params: {\r\n                api_key: apiKey,\r\n                page: page,\r\n                ...queryIfExist\r\n\r\n            }\r\n        });\r\n        return await response.data;\r\n    } catch (error) {\r\n        \r\n    }\r\n};","import { put, debounce, call, takeLatest, delay } from \"redux-saga/effects\";\r\nimport Axios from \"axios\";\r\nimport {\r\n    fetchGenresList,\r\n    initiateFetch,\r\n    initiateMovieOrPersonFetch,\r\n    inputChange,\r\n    setGenres,\r\n    setMovieCredits,\r\n    setMovieDetails,\r\n    setPageInformation,\r\n    setPersonCredits,\r\n    setPersonDetails,\r\n    setQueryString,\r\n    setStatus\r\n} from \"./MoviesSlice\";\r\nimport { apiKey, movieKey, moviesKey, peopleKey, personKey } from \"./functionsAndKeys/keys\";\r\nimport { fetchFromApi } from \"./functionsAndKeys/fetchFromApi\";\r\n\r\nfunction* fetchHandler(action) {\r\n    const page = yield action.payload.page;\r\n    const type = yield action.payload.type;\r\n    const query = yield action.payload.query;\r\n    yield delay(150)\r\n    if (query) {\r\n        if (type === moviesKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/search/movie??\", page, query);\r\n                yield put(setPageInformation(data));\r\n                yield put(setStatus(\"success\"));\r\n            } catch (error) {\r\n                yield put(setStatus(\"failed\"));\r\n            };\r\n        }\r\n        if (type === peopleKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/search/person?\", page, query);\r\n                yield put(setPageInformation(data));\r\n                yield put(setStatus(\"success\"));\r\n            } catch (error) {\r\n                yield put(setStatus(\"failed\"));\r\n            };\r\n        }\r\n    } else {\r\n        if (type === moviesKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/movie/popular?\", page);\r\n                yield put(setPageInformation(data));\r\n                yield put(setStatus(\"success\"));\r\n            }\r\n            catch (error) {\r\n                yield put(setStatus(\"failed\"));\r\n            }\r\n        }\r\n        if (type === peopleKey) {\r\n            try {\r\n                const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/person/popular?\", page);\r\n                yield put(setPageInformation(data));\r\n                yield put(setStatus(\"success\"));\r\n            }\r\n            catch (error) {\r\n                yield put(setStatus(\"failed\"));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction* inputChangeHandler(action) {\r\n    const payload = yield action.payload;\r\n    yield put(setQueryString(payload));\r\n};\r\n\r\nexport function* MoviesSaga() {\r\n    yield takeLatest(initiateFetch.type, fetchHandler);\r\n    yield debounce(1000, inputChange.type, inputChangeHandler);\r\n};\r\n\r\nfunction* fetchGenresFromAPI() {\r\n    try {\r\n        const response = yield Axios.get(\"https://api.themoviedb.org/3/genre/movie/list?\", {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        });\r\n        yield put(setGenres(response.data));\r\n    } catch (error) {\r\n    }\r\n};\r\n\r\nexport function* setGenresList() {\r\n    yield takeLatest(fetchGenresList.type, fetchGenresFromAPI);\r\n};\r\n\r\nfunction* fetchMovieOrPersonData(action) {\r\n    const id = yield action.payload.id;\r\n    const type = yield action.payload.type;\r\n    yield delay(150)\r\n    try {\r\n        switch (type) {\r\n            case movieKey:\r\n                const movieDetailsData = yield Axios.get(`https://api.themoviedb.org/3/movie/${id}?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                });\r\n                yield put(setMovieDetails(movieDetailsData.data));\r\n\r\n                const movieCreditsData = yield Axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                });\r\n                yield put(setMovieCredits(movieCreditsData.data));\r\n                yield put(setStatus(\"success\"));\r\n                break;\r\n            case personKey:\r\n                const personDetailsData = yield Axios.get(`https://api.themoviedb.org/3/person/${id}?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                });\r\n                yield put(setPersonDetails(personDetailsData.data));\r\n                const personCreditsData = yield Axios.get(`https://api.themoviedb.org/3/person/${id}/movie_credits?`, {\r\n                    params: {\r\n                        api_key: apiKey\r\n                    }\r\n                });\r\n                yield put(setPersonCredits(personCreditsData.data));\r\n                yield put(setStatus(\"success\"));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    } catch (error) {\r\n        yield put(setStatus(\"failed\"));\r\n    }\r\n};\r\n\r\nexport function* fetchMoviesAndPeopleFromAPI() {\r\n    yield takeLatest(initiateMovieOrPersonFetch.type, fetchMovieOrPersonData);\r\n};","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fetchMoviesAndPeopleFromAPI, MoviesSaga, setGenresList } from \"./MoviesSaga\";\r\nimport moviesSlice from \"./MoviesSlice\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        movies: moviesSlice\r\n    },\r\n    middleware: [sagaMiddleware]\r\n});\r\n\r\nsagaMiddleware.run(MoviesSaga);\r\nsagaMiddleware.run(setGenresList);\r\nsagaMiddleware.run(fetchMoviesAndPeopleFromAPI);\r\n\r\nexport default store;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Poppins', sans-serif;\r\n        background: ${({theme}) => theme.color.background};\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;","export const theme = {\r\n    color: {\r\n        black: \"#18181B\",\r\n        background: \"#F5F5FA\",\r\n        boxShadow: \"rgba(186, 199, 213, 0.5)\",\r\n        pagerButton: \"#D6E4FF\",\r\n        pagerButtonDisabled: \"#E4E6F0\",\r\n        pageText: \"#7E839A\",\r\n        posterBackground: \"#000000\",\r\n        posterFont: \"#ffffff\",\r\n        mainFont: \"#000000\",\r\n        secondaryFont: \"#7E839A\",\r\n        genresBoxBackground: \"#E4E6F0\",\r\n        tileBackground: \"#ffffff\",\r\n        refreshButtonFont: \"#ffffff\",\r\n        refreshButtonBackground: \"#0044CC\",\r\n        noImageBackground: \"#C4C4C4\",\r\n        jobOrCharacterName: \"#7E839A\",\r\n        ShowMoreButton: \"#ADB5BD\",\r\n        adultButton: \"#FF0000\",\r\n        themeButtonFont: \"#DEE2E6\",\r\n        themeButtonBackground: \"#aaaaaa\",\r\n        themeButtonItem: \"#212529\",\r\n        navigationBackground: \"#000000\",\r\n        navigationFont: \"#ffffff\"\r\n    },\r\n    breakpoint: {\r\n        noContainer: 1400,\r\n        tabletMax: 991,\r\n        mobileMax: 767,\r\n        mobile: 500,\r\n        mobileMin: 350,\r\n    },\r\n    transform: {\r\n        toggleTheme: \"translateX(0px)\",\r\n    }\r\n};\r\n\r\nexport const darkTheme = {\r\n    color: {\r\n        black: \"#DEE2E6\",\r\n        background: \"#212529\",\r\n        boxShadow: \"#495057\",\r\n        pagerButton: \"#CED4DA\",\r\n        pagerButtonDisabled: \"#6C757D\",\r\n        pageText: \"#6C757D\",\r\n        posterBackground: \"#000000\",\r\n        posterFont: \"#DEE2E6\",\r\n        mainFont: \"#DEE2E6\",\r\n        secondaryFont: \"#6C757D\",\r\n        genresBoxBackground: \"#495057\",\r\n        tileBackground: \"#343A40\",\r\n        refreshButtonFont: \"#DEE2E6\",\r\n        refreshButtonBackground: \"#6C757D\",\r\n        noImageBackground: \"#6C757D\",\r\n        jobOrCharacterName: \"#7E839A\",\r\n        ShowMoreButton: \"#DEE2E6\",\r\n        adultButton: \"#FF0000\",\r\n        themeButtonFont: \"#DEE2E6\",\r\n        themeButtonBackground: \"#343A40\",\r\n        themeButtonItem: \"#212529\",\r\n        navigationBackground: \"#000000\",\r\n        navigationFont: \"#ffffff\"\r\n    },\r\n    breakpoint: {\r\n        noContainer: 1400,\r\n        tabletMax: 991,\r\n        mobileMax: 767,\r\n        mobile: 500,\r\n        mobileMin: 350,\r\n    },\r\n    transform: {\r\n        toggleTheme: \"translateX(40px)\",\r\n    }\r\n};","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useQueryParameter = (param) => {\r\n    const location = useLocation();\r\n    return (new URLSearchParams(location.search).get(param));\r\n}\r\n\r\nexport default useQueryParameter;","import styled from \"styled-components\";\r\n\r\nexport const ButtonContainer = styled.div`\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: black;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    font-size: 16px;\r\n    color: ${({ theme }) => theme.color.themeButtonFont};\r\n    padding: 12px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    height: 40px;\r\n    width: 80px;\r\n    border-radius: 20px;\r\n    border: 1px solid white;\r\n    background-color: ${({ theme }) => theme.color.themeButtonBackground};\r\n    padding: 0 2px;\r\n    display: flex;\r\n    align-items: center;\r\n    outline: none;\r\n`;\r\n\r\nexport const ButtonItem = styled.div`\r\n    height: 36px;\r\n    width: 36px;\r\n    border: 1px solid black;\r\n    border-radius: 18px;\r\n    background-color: ${({ theme }) => theme.color.themeButtonItem};\r\n    transform: ${({ theme }) => theme.transform.toggleTheme};\r\n`;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleThemeStatus } from \"../../MoviesSlice\";\r\nimport { Button, ButtonItem, ButtonContainer, Content } from \"./styled\";\r\n\r\nconst ToggleThemeButton = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ButtonContainer>\r\n            <Content>Change theme:</Content>\r\n            <Button\r\n                onClick={() => dispatch(toggleThemeStatus())}\r\n            >\r\n                <ButtonItem />\r\n            </Button>\r\n        </ButtonContainer>\r\n    )\r\n};\r\n\r\nexport default ToggleThemeButton;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n    max-width: 1368px;\r\n    margin: 56px auto;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        margin: 56px 20px;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        max-width: unset;\r\n        width: calc(100% - 32px);\r\n        margin: 24px 16px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Main } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n);\r\n\r\nexport default Container;","function ImageBaseLink(size) {\r\n    return (\r\n        `http://image.tmdb.org/t/p/${size}`\r\n    )\r\n};\r\n\r\nexport default ImageBaseLink;\r\n\r\n// Image size information\r\n\r\n// {\r\n//     \"images\": {\r\n//       \"base_url\": \"http://image.tmdb.org/t/p/\",\r\n//       \"secure_base_url\": \"https://image.tmdb.org/t/p/\",\r\n//       \"backdrop_sizes\": [\r\n//         \"w300\",\r\n//         \"w780\",\r\n//         \"w1280\",\r\n//         \"original\"\r\n//       ],\r\n//       \"logo_sizes\": [\r\n//         \"w45\",\r\n//         \"w92\",\r\n//         \"w154\",\r\n//         \"w185\",\r\n//         \"w300\",\r\n//         \"w500\",\r\n//         \"original\"\r\n//       ],\r\n//       \"poster_sizes\": [\r\n//         \"w92\",\r\n//         \"w154\",\r\n//         \"w185\",\r\n//         \"w342\",\r\n//         \"w500\",\r\n//         \"w780\",\r\n//         \"original\"\r\n//       ],\r\n//       \"profile_sizes\": [\r\n//         \"w45\",\r\n//         \"w185\",\r\n//         \"h632\",\r\n//         \"original\"\r\n//       ],\r\n//       \"still_sizes\": [\r\n//         \"w92\",\r\n//         \"w185\",\r\n//         \"w300\",\r\n//         \"original\"\r\n//       ]\r\n//     },\r\n//     \"change_keys\": [\r\n//       \"adult\",\r\n//       \"air_date\",\r\n//       \"also_known_as\",\r\n//       \"alternative_titles\",\r\n//       \"biography\",\r\n//       \"birthday\",\r\n//       \"budget\",\r\n//       \"cast\",\r\n//       \"certifications\",\r\n//       \"character_names\",\r\n//       \"created_by\",\r\n//       \"crew\",\r\n//       \"deathday\",\r\n//       \"episode\",\r\n//       \"episode_number\",\r\n//       \"episode_run_time\",\r\n//       \"freebase_id\",\r\n//       \"freebase_mid\",\r\n//       \"general\",\r\n//       \"genres\",\r\n//       \"guest_stars\",\r\n//       \"homepage\",\r\n//       \"images\",\r\n//       \"imdb_id\",\r\n//       \"languages\",\r\n//       \"name\",\r\n//       \"network\",\r\n//       \"origin_country\",\r\n//       \"original_name\",\r\n//       \"original_title\",\r\n//       \"overview\",\r\n//       \"parts\",\r\n//       \"place_of_birth\",\r\n//       \"plot_keywords\",\r\n//       \"production_code\",\r\n//       \"production_companies\",\r\n//       \"production_countries\",\r\n//       \"releases\",\r\n//       \"revenue\",\r\n//       \"runtime\",\r\n//       \"season\",\r\n//       \"season_number\",\r\n//       \"season_regular\",\r\n//       \"spoken_languages\",\r\n//       \"status\",\r\n//       \"tagline\",\r\n//       \"title\",\r\n//       \"translations\",\r\n//       \"tvdb_id\",\r\n//       \"tvrage_id\",\r\n//       \"type\",\r\n//       \"video\",\r\n//       \"videos\"\r\n//     ]\r\n//   }","import styled, { css } from \"styled-components\";\r\n\r\nexport const TileContainer = styled.div`\r\n    width: 324px;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    padding: 16px;\r\n    color: ${({ theme }) => theme.color.mainFont};\r\n    font-weight: 400;\r\n    background-color: ${({ theme }) => theme.color.tileBackground};\r\n    border-radius: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: 0.3s;\r\n        \r\n    &:hover {\r\n       filter: brightness(93%);\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        flex-direction: row;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    display: grid;\r\n    grid-template-rows: repeat(3, auto) 1fr;\r\n    grid-gap: 8px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        padding-left: 16px;\r\n    }\r\n`;\r\n\r\nexport const PosterImage = styled.img`\r\n    width: 292px;\r\n    height: 434px;\r\n    margin: 0 0 8px;\r\n    border-radius: 5px;\r\n    flex-shrink: 0;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        width: 114px;\r\n        height: 169px;\r\n        margin: 0;\r\n    }\r\n\r\n    ${({ noImage }) => noImage && css`\r\n        background-color: ${({ theme }) => theme.color.noImageBackground};\r\n        background-size: initial;\r\n        background-repeat: no-repeat;\r\n    `}\r\n`;\r\n\r\nexport const MovieTitle = styled.h3`\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n    font-weight: 500;\r\n    margin: 0;\r\n    overflow-wrap: anywhere;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    }\r\n`;\r\n\r\nexport const ReselaseYear = styled.h4`\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    margin: 0;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 13px;\r\n    line-height: 17px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const Genres = styled.div`\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: ${({ theme }) => theme.color.mainFont};\r\n    padding: 8px 16px;\r\n    margin: 0 8px 8px 0;\r\n    background-color: ${({ theme }) => theme.color.genresBoxBackground};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 10px;\r\n    line-height: 11px;\r\n    padding: 4px 8px;\r\n    }\r\n`;\r\n\r\nexport const GenresBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const VotesBox = styled.div`\r\n    max-height: 24px;\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    display: flex;\r\n    align-self: end;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    max-height: 24px;\r\n    font-size: 13px;\r\n    line-height: 24px;\r\n    }\r\n`;\r\n\r\nexport const VoteIcon = styled.img`\r\n    width: 24px;\r\n    display: block;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        width: 16px;\r\n    }\r\n`;\r\n\r\nexport const VotesAverage = styled.div`\r\n    padding: 0 12px;\r\n    font-weight: 600;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        font-size: 13px;\r\n        line-height: 24px;\r\n        font-weight: 600;\r\n        padding: 0 8px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMin}px) {\r\n        padding: 0 4px;\r\n    }\r\n`;\r\n\r\nexport const VotesCount = styled.div`\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectGenres } from \"../../MoviesSlice\";\r\nimport imageBaseLink from \"../../functionsAndKeys/imageBaseLink\";\r\nimport voteIcon from \"../../assets/voteIcon.svg\";\r\nimport noImage from \"../../assets/noMovieImage.svg\";\r\nimport {\r\n    TileContainer,\r\n    ContentContainer,\r\n    PosterImage,\r\n    MovieTitle,\r\n    ReselaseYear,\r\n    GenresBox,\r\n    Genres,\r\n    VotesBox,\r\n    VotesAverage,\r\n    VoteIcon,\r\n    VotesCount\r\n} from \"./styled\";\r\n\r\nconst MovieSmallTile = ({ content }) => {\r\n    const tileImageBaseLink = imageBaseLink(\"w342\");\r\n    const date = new Date(content.release_date);\r\n    const genres = useSelector(selectGenres);\r\n\r\n    return (\r\n        <TileContainer>\r\n            <PosterImage\r\n                src={content.poster_path ? tileImageBaseLink + content.poster_path : noImage}\r\n                alt={content.title}\r\n                noImage={!content.poster_path}\r\n            />\r\n            <ContentContainer>\r\n                <MovieTitle>\r\n                    {content.title}\r\n                </MovieTitle>\r\n                <ReselaseYear>\r\n                    {content.release_date ? date.getFullYear() : \"N/N\"}\r\n                </ReselaseYear>\r\n                <GenresBox>\r\n                    {content.genre_ids && genres.genres && content.genre_ids.map((genre_id) => (\r\n                        genres.genres.map(genre => genre.id === genre_id\r\n                            ? <Genres key={genre.id}>{genre.name}</Genres>\r\n                            : \"\")))\r\n                    }\r\n                </GenresBox>\r\n                <VotesBox>\r\n                    <VoteIcon src={voteIcon} />\r\n                    <VotesAverage>\r\n                        {content.vote_average}\r\n                    </VotesAverage>\r\n                    <VotesCount>\r\n                        {content.vote_count} votes\r\n                    </VotesCount>\r\n                </VotesBox>\r\n            </ContentContainer>\r\n        </TileContainer>\r\n    )\r\n};\r\n\r\nexport default MovieSmallTile;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 16px;\r\n    background-color: ${({ theme }) => theme.color.tileBackground};\r\n    box-shadow: 0px 4px 12px ${({ theme }) => theme.color.boxShadow};\r\n    border-radius: 5px;\r\n    transition: 0.3s;\r\n            \r\n    &:hover {\r\n       filter: brightness(93%);\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n       padding: 8px;\r\n    }\r\n`;\r\n\r\nexport const StyledImage = styled.div`\r\n    background-image: url(${({ src }) => src});\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 177px;\r\n    height: 232px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${({ noImage }) => noImage && css`\r\n        background-image: none;\r\n        background-color: ${({ theme }) => theme.color.noImageBackground};\r\n        background-size: initial;\r\n        background-repeat: no-repeat;\r\n    `}\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 120px;\r\n        height: 178px;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    display: none;\r\n\r\n    ${({ noImage }) => noImage && css`\r\n        display: unset;\r\n    `}\r\n`\r\n\r\nexport const Name = styled.h3`\r\n    margin: 0;\r\n    margin-top: 8px;\r\n    color: ${({ theme }) => theme.color.black};\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    text-align: center;\r\n    overflow-wrap: anywhere;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nexport const JobOrCharacterName = styled.h4`\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    margin: 8px auto;\r\n    color: ${({ theme }) => theme.color.jobOrCharacterName};\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 13px;\r\n    }\r\n`;","import React from \"react\";\r\nimport imageBaseLink from \"../../functionsAndKeys/imageBaseLink\";\r\nimport noImage from \"../../assets/noPersonImage.svg\";\r\nimport { Container, Name, StyledImage, JobOrCharacterName, Icon } from \"./styled\";\r\n\r\nconst PersonTile = ({ person, castAndCrew }) => {\r\n    const imageLink = `${imageBaseLink(\"w500\")}${person.profile_path}`;\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <StyledImage\r\n                alt={person.name}\r\n                src={imageLink}\r\n                noImage={!person.profile_path}\r\n            >\r\n                <Icon\r\n                    src={noImage}\r\n                    noImage={!person.profile_path}\r\n                />\r\n            </StyledImage>\r\n            <Name>\r\n                {person.name}\r\n            </Name>\r\n            {castAndCrew ?\r\n                <JobOrCharacterName>\r\n                    {castAndCrew === \"cast\" ? person.character : person.job}\r\n                </JobOrCharacterName>\r\n                :\r\n                \"\"\r\n            }\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default PersonTile;","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const GridLink = styled(Link)`\r\n    text-decoration: none;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStatus } from \"../../MoviesSlice\";\r\nimport { moviesKey } from \"../../functionsAndKeys/keys\";\r\nimport MovieSmallTile from \"../../tiles/MovieSmallTile\";\r\nimport PersonTile from \"../../tiles/PersonTile\";\r\nimport { GridLink } from \"./styled\";\r\n\r\nconst GridListItem = ({ fragment, type, castAndCrew, toHide, showMore }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return ((toHide && showMore) || !toHide) && (\r\n        <li\r\n            onClick={() => dispatch(setStatus(\"loading\"))}\r\n        >\r\n            {type === moviesKey\r\n                ? <GridLink\r\n                    to={`/movies/${fragment.id}`}\r\n                >\r\n                    {<MovieSmallTile\r\n                        key={fragment.id}\r\n                        content={fragment}\r\n                        castAndCrew={castAndCrew}\r\n                    />}\r\n                </GridLink>\r\n                : <GridLink\r\n                    to={`/people/${fragment.id}`}>\r\n                    <PersonTile\r\n                        person={fragment}\r\n                        castAndCrew={castAndCrew}\r\n                    />\r\n                </GridLink>\r\n            }\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default GridListItem;","import styled, { css } from \"styled-components\";\r\nimport { moviesKey, peopleKey } from \"../../functionsAndKeys/keys\";\r\n\r\nexport const Grid = styled.ul`\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    display: grid;\r\n    grid-gap: 24px;\r\n    justify-content: center;\r\n    list-style: none;\r\n\r\n    ${({ type }) => type === moviesKey && css`\r\n        grid-template-columns: repeat(auto-fill, 324px);\r\n\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: 1fr;\r\n            grid-gap: 16px 0;\r\n        }\r\n    `}\r\n\r\n    ${({ type }) => type === peopleKey && css`\r\n        grid-template-columns: repeat(auto-fill, 208px);\r\n        grid-auto-rows: minmax(339px, min-content);\r\n\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: repeat(auto-fill, 136px);\r\n            grid-auto-rows: minmax(245px, min-content);\r\n            grid-gap: 16px;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: none;\r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    font-size: 16px;\r\n    margin: 24px 0;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    color: ${({ theme }) => theme.color.ShowMoreButton};\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n       filter: brightness(110%);\r\n    }\r\n`;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectGenres, setGenres } from \"../../MoviesSlice\";\r\nimport GridListItem from \"../GridListItem\";\r\nimport { Button, Grid } from \"./styled\";\r\n\r\nconst GridTemplate = ({ content, type, castAndCrew }) => {\r\n  const dispatch = useDispatch();\r\n  const genresData = useSelector(selectGenres);\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  if (genresData === []) {\r\n    dispatch(setGenres([]))\r\n  } else { }\r\n\r\n  const toHide = (i) => i > 11 && castAndCrew;\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        type={type}\r\n      >\r\n        {content && content.map((fragment) => (\r\n          <GridListItem\r\n            key={fragment.credit_id ? fragment.credit_id : fragment.id}\r\n            fragment={fragment}\r\n            toHide={toHide(content.indexOf(fragment))}\r\n            castAndCrew={castAndCrew}\r\n            type={type}\r\n            showMore={showMore}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {content.length > 12 && castAndCrew\r\n        ? <Button\r\n          onClick={() => setShowMore(!showMore)}\r\n        >\r\n          {showMore ? \"Hide\" : \"Show More\"}\r\n        </Button>\r\n        : \"\"\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport default GridTemplate;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h2`\r\n    font-size: 36px;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.color.mainFont};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 18px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ text }) => (\r\n    <StyledHeader>\r\n        {text}\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\"\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin: 120px auto;\r\n    width: 91px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin: 24px auto;\r\n        width: 35px;\r\n    }\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n    width: 100%;\r\n    animation-name: spiner;\r\n    animation-duration: 0.7s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n\r\n    @keyframes spiner {\r\n        from { }\r\n        50% {\r\n            transform: rotateZ(180deg);\r\n        }\r\n        to {\r\n            transform: rotateZ(360deg);\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport loadingRing from \"../../assets/loadingRing.svg\";\r\nimport { ImageContainer, StyledImage } from \"./styled\";\r\n\r\nconst LoadingPage = () => (\r\n    <ImageContainer>\r\n        <StyledImage\r\n            src={loadingRing}\r\n            alt=\"loadingRing\"\r\n        />\r\n    </ImageContainer>\r\n);\r\n\r\nexport default LoadingPage;","import styled from \"styled-components\";\r\n\r\nexport const ImageContainer = styled.div`\r\n    margin: 40px auto;\r\n    width: 668px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 80vw;\r\n    }\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n    width: 100%;\r\n`;","import React from \"react\";\r\nimport noResultsImage from \"../../assets/noResultsImage.svg\";\r\nimport { ImageContainer, StyledImage } from \"./styled\";\r\n\r\nconst NoResults = () => (\r\n    <ImageContainer>\r\n        <StyledImage\r\n            src={noResultsImage}\r\n            alt=\"no results\"\r\n        />\r\n    </ImageContainer>\r\n);\r\n\r\nexport default NoResults;","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 592px;\r\n    margin: 180px auto;\r\n    text-align: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 90vw;\r\n    }\r\n`;\r\nexport const StyledImage = styled.img`\r\n    width: 100px;\r\n`;\r\n\r\nexport const MainHeader = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 36px;\r\n    margin: 24px auto;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 20px;\r\n        margin: 12px auto;\r\n    }\r\n`;\r\n\r\nexport const SmallHeader = styled.h3`\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    margin: 24px auto;\r\n    padding: 0 82px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 14px;\r\n        margin: 12px auto;\r\n        padding: 0 20px;\r\n    }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    display: inline-block;\r\n    margin: 24px auto;\r\n    padding: 16px 24px;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.color.refreshButtonFont};\r\n    background-color: ${({ theme }) => theme.color.refreshButtonBackground};\r\n    border-radius: 5px;\r\n     \r\n    &:hover {\r\n        filter: brightness(105%);\r\n    }\r\n       \r\n    &:active {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 9px;\r\n        margin: 12px auto;\r\n        padding: 8 12px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStatus } from \"../../MoviesSlice\";\r\nimport icon from \"../../assets/failedIcon.svg\";\r\nimport { Container, StyledImage, MainHeader, SmallHeader, StyledLink } from \"./styled\";\r\n\r\nconst Failed = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Container>\r\n            <StyledImage\r\n                src={icon}\r\n                alt={\"something gone wrong\"}\r\n            />\r\n            <MainHeader>\r\n                Oops! Something went wrong...\r\n        </MainHeader>\r\n            <SmallHeader>\r\n                Please check your network connection and try again\r\n        </SmallHeader>\r\n            <StyledLink\r\n                to={\"/movies\"}\r\n                onClick={() => dispatch(setStatus(\"loading\"))}\r\n            >\r\n                Back to home page\r\n        </StyledLink>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Failed;","import { useLocation, useHistory } from \"react-router-dom\";\r\nimport { pageKey, searchKey } from \"./functionsAndKeys/keys\";\r\n\r\nconst useReplaceQueryParameter = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const setQueryValue = (type, { key, value }) => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n        if (!value) {\r\n            searchParams.delete(key);\r\n        } else {\r\n            searchParams.set(key, value);\r\n        }\r\n        if (key === searchKey) {\r\n            searchParams.set(pageKey, 1);\r\n        }\r\n        history.push(`/${type}?${searchParams.toString()}`);\r\n    }\r\n    return setQueryValue;\r\n};\r\n\r\nexport default useReplaceQueryParameter;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.nav`\r\n    display: flex;\r\n    width: 530px;\r\n    height: 36px;\r\n    margin: 40px auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            width: 100%;\r\n            margin: 32px auto;\r\n        }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 -6px;\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    padding: 8px 18px;\r\n    color: ${({ theme }) => theme.color.pageText};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            font-size: 13px;\r\n            padding: 7.5px 8px;\r\n        }\r\n`;\r\n\r\nexport const Counter = styled.strong`\r\n    display: inline-block;\r\n    margin: 0 8px;\r\n    color: ${({ theme }) => theme.color.black};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin: 0 2px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.color.pagerButton};\r\n    margin: 0 6px;\r\n    border: none;\r\n\r\n    &:hover {\r\n        filter: brightness(105%);\r\n    };\r\n\r\n    &:focus {\r\n    filter: brightness(110%);\r\n    outline: none;\r\n    }\r\n\r\n    &:active {\r\n    filter: brightness(115%);\r\n    outline: none;\r\n    }\r\n\r\n    &:disabled {\r\n        background-color: ${({ theme }) => theme.color.pagerButtonDisabled};\r\n        color: ${({ theme }) => theme.color.black};\r\n        filter: none;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        padding: 7.5px 12px;\r\n        font-size: 5px;\r\n        margin: 0 4px;\r\n    }\r\n`;\r\n\r\nexport const TextToHide = styled.span`\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin-left: 2px;\r\n    }\r\n\r\n    ${({ left }) => left && css`\r\n        transform: rotateY(180deg);\r\n        margin-right: 4px;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            margin-right: 2px;\r\n        }\r\n    `}\r\n\r\n    ${({ second }) => second && css`\r\n        display: none;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            display: inline-block;\r\n        }\r\n    `}\r\n`;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStatus } from \"../../MoviesSlice\";\r\nimport useQueryParameter from \"../../useQueryParameter\";\r\nimport useReplaceQueryParameter from \"../../useReplaceQueryParameter\";\r\nimport { pageKey } from \"../../functionsAndKeys/keys\";\r\nimport arrow from \"../../assets/arrow.svg\";\r\nimport disabledArrow from \"../../assets//disabledArrow.svg\";\r\nimport {\r\n    Wrapper,\r\n    ButtonContainer,\r\n    Button,\r\n    TextContainer,\r\n    Counter,\r\n    Img,\r\n    TextToHide\r\n} from \"./styled\";\r\n\r\nconst Pager = ({ content, type }) => {\r\n    const page = useQueryParameter(pageKey);\r\n    const replaceQueryParameter = useReplaceQueryParameter();\r\n    const dispatch = useDispatch();\r\n    const maxPage = content.total_pages;\r\n    const pageNumber = Number(page);\r\n\r\n    const onClickButton = (value) => {\r\n        dispatch(setStatus(\"loading\"));\r\n        replaceQueryParameter(type, {\r\n            key: pageKey,\r\n            value: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={pageNumber === 1 || !pageNumber}\r\n                    onClick={() => onClickButton(1)}\r\n                >\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                    />\r\n                    <TextToHide>\r\n                        First\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                        second\r\n                    />\r\n                </Button>\r\n                <Button\r\n                    disabled={pageNumber === 1 || !pageNumber}\r\n                    onClick={() => onClickButton(pageNumber - 1)}\r\n                >\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"Previous page\"\r\n                        left\r\n                    />\r\n                    <TextToHide>\r\n                        Previous\r\n                    </TextToHide>\r\n                </Button>\r\n            </ButtonContainer>\r\n            <TextContainer>\r\n                Page\r\n                <Counter>\r\n                    {pageNumber ? pageNumber : 1}\r\n                </Counter>\r\n                of\r\n                <Counter>\r\n                    {maxPage}\r\n                </Counter>\r\n            </TextContainer>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={pageNumber === maxPage}\r\n                    onClick={() => onClickButton(pageNumber ? pageNumber + 1 : 1 + 1)}\r\n                >\r\n                    <TextToHide>\r\n                        Next\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"Next page\"\r\n                    />\r\n                </Button>\r\n                <Button\r\n                    disabled={pageNumber === maxPage}\r\n                    onClick={() => onClickButton(maxPage)}\r\n                >\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                        second\r\n                    />\r\n                    <TextToHide>\r\n                        Last\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                    />\r\n                </Button>\r\n            </ButtonContainer>\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default Pager;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  initiateFetch,\r\n  selectPageInformation,\r\n  selectStatus,\r\n  fetchGenresList\r\n} from '../../MoviesSlice';\r\nimport { moviesKey, pageKey, searchKey } from '../../functionsAndKeys/keys';\r\nimport useQueryParameter from '../../useQueryParameter';\r\nimport ToggleThemeButton from '../../Common/ToggleThemeButton';\r\nimport Container from '../../Common/Container';\r\nimport GridTemplate from '../../Common/GridTemplate';\r\nimport Header from '../../Common/Header';\r\nimport LoadingPage from \"../../Common/LoadingPage\"\r\nimport NoResults from '../../Common/NoResults';\r\nimport Failed from '../../Common/Failed';\r\nimport Pager from '../../Common/Pager';\r\n\r\nfunction Movies() {\r\n  const dispatch = useDispatch();\r\n  dispatch(fetchGenresList());\r\n  const type = moviesKey;\r\n  const query = useQueryParameter(searchKey);\r\n  const page = useQueryParameter(pageKey);\r\n  const movies = useSelector(selectPageInformation);\r\n  const status = useSelector(selectStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchGenresList());\r\n  },\r\n    [dispatch]);\r\n\r\n  if (status === \"loading\") {\r\n    dispatch(initiateFetch({\r\n      page: page ? page : 1,\r\n      type: type,\r\n      query: query\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {status !== \"failed\"\r\n          ? <Header text={!query\r\n            ? `Popular ${type}`\r\n            : `${movies.total_results === 0\r\n              ? \"Sorry, there are no results for\"\r\n              : \"Search results for\"} \"${query}\"`}\r\n          />\r\n          : \"\"\r\n        }\r\n        {status === \"loading\"\r\n          ? <LoadingPage />\r\n          : \"\"\r\n        }\r\n        {status === \"success\" && movies.total_results > 0\r\n          ? <GridTemplate\r\n            content={movies.results}\r\n            type={type}\r\n          />\r\n          : \"\"\r\n        }\r\n        {status === \"success\" && movies.total_results === 0\r\n          ? <NoResults />\r\n          : \"\"\r\n        }\r\n        {status === \"failed\"\r\n          ? <Failed />\r\n          : \"\"\r\n        }\r\n        {status === \"success\" && movies.total_results > 0\r\n          ? <Pager\r\n            content={movies}\r\n            type={type}\r\n          />\r\n          : \"\"\r\n        }\r\n      </Container>\r\n      {status === \"loading\"\r\n        ? \"\"\r\n        : <ToggleThemeButton />\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initiateFetch, selectPageInformation, selectStatus } from '../../MoviesSlice';\r\nimport { pageKey, peopleKey, searchKey } from '../../functionsAndKeys/keys';\r\nimport useQueryParameter from '../../useQueryParameter';\r\nimport Container from '../../Common/Container';\r\nimport GridTemplate from '../../Common/GridTemplate';\r\nimport Header from '../../Common/Header';\r\nimport LoadingPage from \"../../Common/LoadingPage\"\r\nimport NoResults from '../../Common/NoResults';\r\nimport Failed from '../../Common/Failed';\r\nimport Pager from '../../Common/Pager';\r\nimport ToggleThemeButton from '../../Common/ToggleThemeButton';\r\n\r\nfunction People() {\r\n  const type = peopleKey;\r\n  const query = useQueryParameter(searchKey);\r\n  const page = useQueryParameter(pageKey);\r\n  const dispatch = useDispatch();\r\n  const people = useSelector(selectPageInformation);\r\n  const status = useSelector(selectStatus);\r\n\r\n  if (status === \"loading\") {\r\n    dispatch(initiateFetch({\r\n      page: page ? page : 1,\r\n      type: type,\r\n      query: query\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {status !== \"failed\"\r\n          ? <Header text={!query\r\n            ? `Popular ${type}`\r\n            : `${people.total_results === 0\r\n              ? \"Sorry, there are no results for\"\r\n              : \"Search results for\"\r\n            } \"${query}\"`} />\r\n          : \"\"\r\n        }\r\n        {status === \"loading\"\r\n          ? <LoadingPage />\r\n          : \"\"\r\n        }\r\n        {status === \"success\" && people.total_results > 0\r\n          ? <GridTemplate\r\n            content={people.results}\r\n            type={type}\r\n          />\r\n          : \"\"\r\n        }\r\n        {status === \"success\" && people.total_results === 0\r\n          ? <NoResults />\r\n          : \"\"\r\n        }\r\n        {status === \"failed\"\r\n          ? <Failed />\r\n          :  \"\"\r\n        }\r\n        {status === \"success\" && people.total_results > 0\r\n          ? <Pager\r\n            content={people}\r\n            type={type}\r\n          />\r\n          : \"\"\r\n        }\r\n      </Container>\r\n      {status === \"loading\"\r\n        ? \"\"\r\n        : <ToggleThemeButton />\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default People;","import styled, { css } from \"styled-components\";\r\nimport { movieKey } from '../../functionsAndKeys/keys';\r\n\r\nexport const TileContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0px;\r\n    display: flex;\r\n`;\r\n\r\nexport const MobileTileContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 64px auto;\r\n    padding: 40px;\r\n    color: ${({ theme }) => theme.color.mainFont};\r\n    background-color: ${({ theme }) => theme.color.tileBackground};\r\n    box-shadow: 0px 4px 12px ${({ theme }) => theme.color.boxShadow};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin: 24px auto;\r\n    padding: 24px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    margin: 16px auto;\r\n    padding: 16px;\r\n    }\r\n`;\r\n\r\nexport const PosterImage = styled.img`\r\n    width: ${({ type }) => type === movieKey ? 312 : 399}px;\r\n    height: ${({ type }) => type === movieKey ? 464 : 564}px;\r\n    border-radius: 5px;\r\n    flex-shrink: 0;\r\n\r\n    ${({ noImage }) => noImage && css`\r\n        background-color: ${({ theme }) => theme.color.noImageBackground};\r\n        background-size: initial;\r\n        background-repeat: no-repeat;\r\n    `}\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: ${({ type }) => type === movieKey ? 228 : 232}px;\r\n        height: ${({ type }) => type === movieKey ? 338 : 326}px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        width: ${({ type }) => type === movieKey ? 114 : 116}px;\r\n        height: ${({ type }) => type === movieKey ? 169 : 163}px;\r\n    }\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    max-height: 100%;\r\n    margin-left: 40px;\r\n    padding: 8px 0;\r\n    display: grid;\r\n    grid-template-rows: ${({ type }) => type === movieKey\r\n        ? \"repeat(6, auto)\"\r\n        : \"repeat(3, auto)\"\r\n    } 1fr;\r\n    grid-gap: 24px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-left: 24px;\r\n    padding: 8px 0;\r\n    grid-gap: 12px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    margin-left: 16px;\r\n    padding: 0;\r\n    grid-gap: 8px;\r\n    }\r\n\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    font-size: 36px;\r\n    line-height: 43px;\r\n    font-weight: 600;\r\n    margin: 0;\r\n    overflow-wrap: anywhere;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    font-weight: 500;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    }\r\n`;\r\n\r\nexport const ReselaseYear = styled.h4`\r\n    font-size: 22px;\r\n    font-weight: 400;\r\n    line-height: 26px;\r\n    margin: 0;\r\n    display: flex;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 13px;\r\n    line-height: 17px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const AdditionalContentContainer = styled.div`\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    display: grid;\r\n    grid-template-rows: repeat(2, auto);\r\n    grid-gap: 8px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const AdditionalContentBox = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const AdditionalContentTitle = styled.div`\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        display: ${({ type }) => type === movieKey\r\n        ? \"none\"\r\n        : \"block\"};\r\n    }\r\n`;\r\n\r\nexport const AdditionalContent = styled.div`\r\n    padding: 0 10px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        padding: ${({ type }) => type === movieKey\r\n        ? \"0\"\r\n        : \"0 10px\"};\r\n        color: ${({ theme }) => theme.color.mainFont};\r\n    }\r\n`;\r\n\r\nexport const GenresBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const Genres = styled.div`\r\n    font-size: 14px;\r\n    line-height: 14px;\r\n    padding: 8px 16px;\r\n    margin: 0 16px 16px 0;\r\n    background-color: ${({ theme }) => theme.color.genresBoxBackground};\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    font-size: 12px;\r\n    line-height: 12px;\r\n    padding: 8px 12px;\r\n    margin: 0 12px 12px 0;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n    font-size: 10px;\r\n    line-height: 11px;\r\n    padding: 8px 8px;\r\n    margin: 0 8px 8px 0;\r\n    }\r\n`;\r\n\r\nexport const VotesContainer = styled.div`\r\n    max-height: 32px;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    font-weight: 400;\r\n    display: flex;\r\n    align-self: end;\r\n    align-items: center;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    max-height: 24px;\r\n    font-size: 13px;\r\n    line-height: 24px;\r\n    }\r\n`;\r\n\r\nexport const VoteIcon = styled.img`\r\n    width: 24px;\r\n    display: block;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 16px;\r\n    }\r\n`;\r\n\r\nexport const VotesBox = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const VotesAverage = styled.div`\r\n    padding: 0 8px;\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n    font-weight: 500;\r\n    line-height: 1;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 13px;\r\n        line-height: 24px;\r\n        font-weight: 600;\r\n    }\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        font-size: 13px;\r\n        line-height: 24px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nexport const VotesScale = styled.div`\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        display: none;\r\n        color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const VotesCount = styled.div`\r\n    padding: 0 12px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    padding: 0 8px;\r\n    color: ${({ theme }) => theme.color.secondaryFont};\r\n    }\r\n`;\r\n\r\nexport const Overview = styled.div`\r\n    font-size: 20px;\r\n    line-height: 32px;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const LongOverview = styled.div`\r\n    font-size: 20px;\r\n    line-height: 32px;\r\n    padding: 24px 0;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const MobileOverview = styled.div`\r\n    display: none;\r\n    padding: 16px 0;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        display: block;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        font-size: 14px;\r\n        line-height: 22px;\r\n        padding: 12px 0;\r\n    }\r\n`;","import React from \"react\";\r\nimport { movieKey } from '../../functionsAndKeys/keys';\r\nimport imageBaseLink from \"../../functionsAndKeys/imageBaseLink\";\r\nimport voteIcon from \"../../assets/voteIcon.svg\";\r\nimport noMovieImage from \"../../assets/noMovieImage.svg\";\r\nimport noPersonImage from \"../../assets/noPersonImage.svg\";\r\nimport {\r\n    TileContainer,\r\n    MobileTileContainer,\r\n    PosterImage,\r\n    ContentContainer,\r\n    Title,\r\n    ReselaseYear,\r\n    AdditionalContentContainer,\r\n    AdditionalContentBox,\r\n    AdditionalContentTitle,\r\n    AdditionalContent,\r\n    GenresBox,\r\n    Genres,\r\n    VotesContainer,\r\n    VoteIcon,\r\n    VotesBox,\r\n    VotesAverage,\r\n    VotesScale,\r\n    VotesCount,\r\n    Overview,\r\n    LongOverview,\r\n    MobileOverview,\r\n} from \"./styled\";\r\n\r\nconst UniversalBigTile = ({ type, content }) => {\r\n    let posterSize = \"\";\r\n    if (type === movieKey) {\r\n        posterSize = \"w342\";\r\n    } else {\r\n        posterSize = \"h632\";\r\n    }\r\n    const tileImageBaseLink = imageBaseLink(posterSize);\r\n\r\n    let defaultDate = \"\";\r\n    let imagePath = \"\";\r\n\r\n    if (type === movieKey) {\r\n        defaultDate = content.release_date;\r\n        imagePath = content.poster_path;\r\n    } else {\r\n        defaultDate = content.birthday;\r\n        imagePath = content.profile_path;\r\n    }\r\n\r\n    const date = new Date(defaultDate);\r\n\r\n    return (\r\n        <MobileTileContainer>\r\n            <TileContainer>\r\n                <PosterImage\r\n                    src={imagePath !== null\r\n                        ? tileImageBaseLink + imagePath\r\n                        : type === movieKey\r\n                            ? noMovieImage\r\n                            : noPersonImage\r\n                    }\r\n                    alt={type === movieKey ? content.title : content.name}\r\n                    noImage={!content.poster_path}\r\n                    type={type}\r\n                />\r\n                <ContentContainer type={type}>\r\n                    <Title>\r\n                        {content && type === movieKey\r\n                            ? content.title\r\n                            : content.name\r\n                        }\r\n                    </Title>\r\n                    {defaultDate && content && type && type === movieKey\r\n                        ? <ReselaseYear>{date.getFullYear()}</ReselaseYear>\r\n                        : \"\"\r\n                    }\r\n                    <AdditionalContentContainer>\r\n                        <AdditionalContentBox>\r\n                            <AdditionalContentTitle>\r\n                                {content && type && type === movieKey\r\n                                    ? \"Production:\"\r\n                                    : \"Date of birth:\"\r\n                                }\r\n                            </AdditionalContentTitle>\r\n                            <AdditionalContent>\r\n                                {content.production_countries && type && type === movieKey\r\n                                    ? content.production_countries !== null\r\n                                        ? content.production_countries.map(production_country =>\r\n                                            production_country.name).join(\", \")\r\n                                        : \"-\"\r\n                                    : defaultDate !== null\r\n                                        ? date.toLocaleDateString()\r\n                                        : \"-\"\r\n                                }\r\n                            </AdditionalContent>\r\n                        </AdditionalContentBox>\r\n                        <AdditionalContentBox>\r\n                            <AdditionalContentTitle>\r\n                                {content && type === movieKey\r\n                                    ? \"Release date:\"\r\n                                    : \"Place of birth:\"\r\n                                }\r\n                            </AdditionalContentTitle>\r\n                            <AdditionalContent>\r\n                                {date && type && type === movieKey\r\n                                    ? defaultDate !== null ? date.toLocaleDateString() : \"-\"\r\n                                    : content.place_of_birth !== null ? content.place_of_birth : \"-\"\r\n                                }\r\n                            </AdditionalContent>\r\n                        </AdditionalContentBox>\r\n                    </AdditionalContentContainer>\r\n                    {content && type && type === movieKey\r\n                        ? <GenresBox>\r\n                            {content.genres && content.genres.map(genre =>\r\n                                <Genres key={genre.id}>{genre.name}</Genres>\r\n                            )}\r\n                        </GenresBox>\r\n                        : \"\"\r\n                    }\r\n                    {content && type && type === movieKey\r\n                        ? <VotesContainer>\r\n                            <VoteIcon src={voteIcon} />\r\n                            <VotesBox>\r\n                                <VotesAverage>\r\n                                    {content.vote_average}\r\n                                </VotesAverage>\r\n                                <VotesScale>\r\n                                    / 10\r\n                                </VotesScale>\r\n                                <VotesCount>\r\n                                    {content.vote_count} votes\r\n                                </VotesCount>\r\n                            </VotesBox>\r\n                        </VotesContainer>\r\n                        : \"\"\r\n                    }\r\n                    <Overview>\r\n                        {content && type && type === movieKey\r\n                            ? content.overview.length < 1000 ? content.overview : \"\"\r\n                            : content.biography.length < 1000 ? content.biography : \"\"\r\n                        }\r\n                    </Overview>\r\n                </ContentContainer>\r\n            </TileContainer>\r\n            <LongOverview>\r\n                {content && type && type === movieKey\r\n                    ? content.overview.length >= 1000 ? content.overview : \"\"\r\n                    : content.biography.length >= 1000 ? content.biography : \"\"\r\n                }\r\n            </LongOverview>\r\n            <MobileOverview>\r\n                {content && type && type === movieKey\r\n                    ? content.overview\r\n                    : content.biography\r\n                }\r\n            </MobileOverview>\r\n        </MobileTileContainer>\r\n    )\r\n};\r\n\r\nexport default UniversalBigTile;","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 592px;\r\n    margin: 180px auto;\r\n    text-align: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 90vw;\r\n    }\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n    width: 100px;\r\n`;\r\n\r\nexport const MainHeader = styled.h2`\r\n    font-weight: 600;\r\n    font-size: 36px;\r\n    margin: 24px auto;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 20px;\r\n        margin: 12px auto;\r\n    }\r\n`;\r\n\r\nexport const SmallHeader = styled.h3`\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    margin: 24px auto;\r\n    padding: 0 82px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 14px;\r\n        margin: 12px auto;\r\n        padding: 0 20px;\r\n    }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n    width: 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    margin: 0 auto;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n    margin: 24px 0;\r\n    padding: 16px 24px;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.color.refreshButtonFont};\r\n    background-color: ${({ theme }) => theme.color.adultButton};\r\n    border-radius: 5px;\r\n     \r\n    &:hover {\r\n        filter: brightness(105%);\r\n    }\r\n       \r\n    &:active {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 9px;\r\n        margin: 12px 0;\r\n        padding: 8 12px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 16px 24px;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    border: none;\r\n    outline: none;\r\n    color: ${({ theme }) => theme.color.refreshButtonFont};\r\n    background-color: ${({ theme }) => theme.color.refreshButtonBackground};\r\n    border-radius: 5px;\r\n     \r\n     &:hover {\r\n        filter: brightness(105%);\r\n     }\r\n       \r\n     &:active {\r\n        filter: brightness(110%);\r\n     }\r\n\r\n     @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 9px;\r\n        padding: 8 12px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAdult, setStatus } from \"../../MoviesSlice\";\r\nimport icon from \"../../assets/AdultIcon.svg\";\r\nimport {\r\n    Container,\r\n    StyledImage,\r\n    MainHeader,\r\n    SmallHeader,\r\n    StyledLink,\r\n    Button,\r\n    ButtonContainer\r\n} from \"./styled\";\r\n\r\nconst AdultContent = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Container>\r\n            <StyledImage\r\n                src={icon}\r\n                alt={\"something gone wrong\"}\r\n            />\r\n            <MainHeader>\r\n                You tried to enter page, which contains adult content\r\n            </MainHeader>\r\n            <SmallHeader>\r\n                If you are not 18 years old, please back to home page and start searching for another information. If you are at least 18 years old and want to see the conent, click on i'm adult\r\n            </SmallHeader>\r\n            <ButtonContainer>\r\n                <StyledLink\r\n                    to={\"/movies\"}\r\n                    onClick={() => dispatch(setStatus(\"loading\"))}\r\n                >\r\n                    Back to home page\r\n            </StyledLink>\r\n                <Button\r\n                    onClick={() => dispatch(setAdult())}\r\n                >\r\n                    I'm adult\r\n            </Button>\r\n            </ButtonContainer>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default AdultContent;","import styled from \"styled-components\";\r\n\r\nexport const PosterBackgrundContainer = styled.div`\r\n    width: 100%;\r\n    background-color: ${({theme}) => theme.color.posterBackground};\r\n    height: 770px;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        height: 40vw;\r\n    }\r\n`;\r\n\r\nexport const PosterBackgroundImageContainer = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 1920px; \r\n    max-height: 770px;\r\n    height: 100%;\r\n    background-image: url(${({ link }) => link});\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    color: ${({theme}) => theme.color.posterFont};\r\n`;\r\n\r\nexport const PosterShadowContainer = styled.div`\r\n    background-image: linear-gradient(270deg, #000000 14.11%, rgba(0, 0, 0, 0.873268) 15.08%, rgba(0, 0, 0, 0.720529) 16.51%, rgba(0, 0, 0, 0.294577) 19.99%, rgba(0, 0, 0, 0.159921) 21.88%, rgba(0, 0, 0, 0) 25.68%), linear-gradient(90deg, #000000 13.6%, rgba(0, 0, 0, 0.984059) 14.58%, rgba(0, 0, 0, 0.967732) 15.44%, rgba(0, 0, 0, 0.865569) 16.3%, rgba(0, 0, 0, 0.230315) 22.87%, rgba(0, 0, 0, 0) 26.64%), linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0.689555) 4.66%, rgba(0, 0, 0, 0.439033) 9.34%, rgba(0, 0, 0, 0.20628) 15.16%, rgba(0, 0, 0, 0) 24.22%), linear-gradient(189.44deg, rgba(0, 0, 0, 0) 58.48%, rgba(0, 0, 0, 0.106473) 63.17%, rgba(0, 0, 0, 0.235359) 68.85%, rgba(0, 0, 0, 0.492821) 78.08%, rgba(0, 0, 0, 0.740286) 85.86%, #000000 92.87%);   \r\n    height: 100%;\r\n`;\r\n\r\nexport const PosterItemsContainer = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 1368px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    padding: 56px 0;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        padding: 16px;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    font-size: 64px;\r\n    line-height: 77px;\r\n    font-weight: 600;\r\n    margin: 0;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        font-size: 36px;\r\n        line-height: 44px;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 24px;\r\n        line-height: 29px;\r\n    }\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        flex-direction: row;\r\n        align-items: center;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const VotesContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 24px 0 16px;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        flex-direction: row;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const VoteIcon = styled.img`\r\n    display: block;\r\n    width: 40px;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        width: 24px;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 16px;\r\n    }\r\n`;\r\n\r\nexport const VotesAverageBox = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const VotesSmallContent = styled.div`\r\n    font-size: 16px;\r\n    line-height: 19px;\r\n    font-weight: 400;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        font-size: 12px;\r\n        line-height: 16px;\r\n        padding-right: 8px;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 10px;\r\n        line-height: 12px;\r\n    }\r\n`;\r\n\r\nexport const VotesBigContent = styled.div`\r\n    font-size: 30px;\r\n    font-weight: 500;\r\n    margin: 0 8px;\r\n    line-height: 1;\r\n    \r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        font-size: 18px;\r\n        line-height: 22px;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        font-size: 13px;\r\n        line-height: 17px;\r\n    }\r\n`;","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    initiateMovieOrPersonFetch,\r\n    selectAdult,\r\n    selectMovieCredits,\r\n    selectMovieDetails,\r\n    selectStatus\r\n} from '../../MoviesSlice';\r\nimport { movieKey, peopleKey } from '../../functionsAndKeys/keys';\r\nimport imageBaseLink from \"../../functionsAndKeys/imageBaseLink\";\r\nimport voteIcon from \"../../assets/voteIcon.svg\";\r\nimport Container from '../../Common/Container';\r\nimport Header from '../../Common/Header';\r\nimport GridTemplate from '../../Common/GridTemplate';\r\nimport UniversalBigTile from '../../tiles/UniversalBigTile';\r\nimport LoadingPage from '../../Common/LoadingPage';\r\nimport Failed from '../../Common/Failed';\r\nimport AdultContent from '../../Common/AdultContent';\r\nimport ToggleThemeButton from '../../Common/ToggleThemeButton';\r\nimport {\r\n    PosterBackgrundContainer,\r\n    PosterShadowContainer,\r\n    PosterBackgroundImageContainer,\r\n    PosterItemsContainer,\r\n    Title,\r\n    ContentContainer,\r\n    VotesContainer,\r\n    VotesAverageBox,\r\n    VoteIcon,\r\n    VotesSmallContent,\r\n    VotesBigContent,\r\n} from './styled';\r\n\r\nfunction MoviePage() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const posterImageBaseLink = imageBaseLink(\"w1280\");\r\n\r\n    const status = useSelector(selectStatus)\r\n    const adult = useSelector(selectAdult)\r\n\r\n    useEffect(() => {\r\n        dispatch(initiateMovieOrPersonFetch({\r\n            id: id,\r\n            type: movieKey,\r\n        }))\r\n    }, [id, dispatch]);\r\n\r\n    const movieDetails = useSelector(selectMovieDetails);\r\n    const movieCredits = useSelector(selectMovieCredits);\r\n\r\n    return (\r\n        <>\r\n            {status === \"failed\"\r\n                ? <Failed />\r\n                : \"\"\r\n            }\r\n            {status === \"loading\"\r\n                ? <LoadingPage />\r\n                : \"\"\r\n            }\r\n            {status === \"success\" && movieDetails.adult && !adult\r\n                ? <AdultContent />\r\n                : \"\"\r\n            }\r\n            {status === \"success\" && (!movieDetails.adult || (movieDetails.adult && adult))\r\n                ? <div>\r\n                    {movieDetails.backdrop_path !== null\r\n                        ? <PosterBackgrundContainer>\r\n                            <PosterBackgroundImageContainer\r\n                                link={'\"' + posterImageBaseLink + movieDetails.backdrop_path + '\"'}\r\n                            >\r\n                                <PosterShadowContainer>\r\n                                    <PosterItemsContainer>\r\n                                        <Title>\r\n                                            {movieDetails.title}\r\n                                        </Title>\r\n                                        <ContentContainer>\r\n                                            <VotesContainer>\r\n                                                <VoteIcon src={voteIcon} alt=\"Vote icon\" />\r\n                                                <VotesAverageBox>\r\n                                                    <VotesBigContent>\r\n                                                        {movieDetails.vote_average}\r\n                                                    </VotesBigContent>\r\n                                                    <VotesSmallContent>\r\n                                                         / 10\r\n                                                    </VotesSmallContent>\r\n                                                </VotesAverageBox>\r\n                                            </VotesContainer>\r\n                                            <VotesSmallContent>\r\n                                                {movieDetails.vote_count} votes\r\n                                            </VotesSmallContent>\r\n                                        </ContentContainer>\r\n                                    </PosterItemsContainer>\r\n                                </PosterShadowContainer>\r\n                            </PosterBackgroundImageContainer>\r\n                        </PosterBackgrundContainer>\r\n                        : \"\"}\r\n                    <Container>\r\n                        <UniversalBigTile\r\n                            content={movieDetails}\r\n                            type=\"movie\"\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header text={\"Cast\"} />\r\n                        <GridTemplate\r\n                            content={movieCredits.cast}\r\n                            type={peopleKey}\r\n                            castAndCrew=\"cast\"\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header text={\"Crew\"} />\r\n                        <GridTemplate\r\n                            content={movieCredits.crew}\r\n                            type={peopleKey}\r\n                            castAndCrew=\"crew\"\r\n                        />\r\n                    </Container>\r\n                </div>\r\n                : \"\"}\r\n            {status === \"loading\"\r\n                ? \"\"\r\n                : <ToggleThemeButton />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviePage;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n    initiateMovieOrPersonFetch,\r\n    selectAdult,\r\n    selectPersonCredits,\r\n    selectPersonDetails,\r\n    selectStatus,\r\n} from '../../MoviesSlice';\r\nimport { moviesKey, personKey } from '../../functionsAndKeys/keys';\r\nimport Container from '../../Common/Container';\r\nimport Header from '../../Common/Header';\r\nimport GridTemplate from '../../Common/GridTemplate';\r\nimport UniversalBigTile from '../../tiles/UniversalBigTile';\r\nimport LoadingPage from '../../Common/LoadingPage';\r\nimport Failed from '../../Common/Failed';\r\nimport AdultContent from '../../Common/AdultContent';\r\nimport ToggleThemeButton from '../../Common/ToggleThemeButton';\r\n\r\nfunction MoviePage() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(initiateMovieOrPersonFetch({\r\n            id: id,\r\n            type: personKey,\r\n        }))\r\n    }, [id, dispatch]);\r\n\r\n    const personDetails = useSelector(selectPersonDetails);\r\n    const personCredits = useSelector(selectPersonCredits);\r\n\r\n    const status = useSelector(selectStatus);\r\n    const adult = useSelector(selectAdult);\r\n\r\n    return (\r\n        <>\r\n            {status === \"failed\"\r\n                ? <Failed />\r\n                : \"\"\r\n            }\r\n            {status === \"loading\"\r\n                ? <LoadingPage />\r\n                : \"\"\r\n            }\r\n            {status === \"success\" && personDetails.adult && !adult\r\n                ? <AdultContent />\r\n                : \"\"\r\n            }\r\n            {status === \"success\" && (!personDetails.adult || (personDetails.adult && adult))\r\n                ? <div>\r\n                    <Container>\r\n                        <UniversalBigTile\r\n                            content={personDetails}\r\n                            type={personKey}\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header\r\n                            text={`Movies - cast(${personCredits.cast && personCredits.cast.length})`}\r\n                        />\r\n                        <GridTemplate\r\n                            content={personCredits.cast}\r\n                            type={moviesKey}\r\n                            castAndCrew=\"movies\"\r\n                        />\r\n                    </Container>\r\n                    <Container>\r\n                        <Header\r\n                            text={`Movies - Crew(${personCredits.crew && personCredits.crew.length})`}\r\n                        />\r\n                        <GridTemplate\r\n                            content={personCredits.crew}\r\n                            type={moviesKey}\r\n                            castAndCrew=\"movies\"\r\n                        />\r\n                    </Container>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            {status === \"loading\"\r\n            ? \"\"\r\n            : <ToggleThemeButton />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MoviePage;","import { useLocation } from \"react-router-dom\";\r\nimport useReplaceQueryParameter from \"../../useReplaceQueryParameter\";\r\nimport { moviesKey, peopleKey, searchKey, } from \"../../functionsAndKeys/keys\";\r\n\r\nconst useSearchByQuery = () => {\r\n    const location = useLocation();\r\n    const replaceQueryParameter = useReplaceQueryParameter();\r\n\r\n    const searchByQuery = (queryString) => {\r\n        if (queryString !== \"initial\") {\r\n            let type = \"\";\r\n            if (location.pathname.includes(moviesKey)) {\r\n                type = moviesKey;\r\n            }\r\n            if (location.pathname.includes(peopleKey)) {\r\n                type = peopleKey;\r\n            }\r\n            const queryValue = queryString.trim() !== \"\" ? queryString : undefined;\r\n            replaceQueryParameter(type, {\r\n                key: searchKey,\r\n                value: queryValue\r\n            })\r\n        }\r\n    };\r\n\r\n    return searchByQuery;\r\n};\r\n\r\nexport default useSearchByQuery;","import styled from \"styled-components\";\r\n\r\nexport const BrowserContainer = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nexport const BrowserLogo = styled.img`\r\n    position: absolute;\r\n    top: 14px;\r\n    left: 25px;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        left: 15px;\r\n        top: 12px;\r\n    }\r\n`;\r\n\r\nexport const BrowserInput = styled.input`\r\n    line-height: 24px;\r\n    font-size: 16px;\r\n    padding: 12px;\r\n    padding-left: 64px;\r\n    border-radius: 24px;\r\n    width: 432px;\r\n    max-height: 48px;\r\n    justify-self: end;\r\n\r\n    &:focus{\r\n       outline: none;\r\n    }\r\n\r\n    @media( max-width:  ${({ theme }) => theme.breakpoint.tabletMax}px) {\r\n        width: 400px;\r\n    }\r\n\r\n    @media( max-width:  ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        width: 100%;\r\n        font-size: 16px;\r\n        line-height: 17px;\r\n        max-height: 44px;\r\n        border-radius: 22px;\r\n        padding-left: 40px;\r\n    }\r\n\r\n`;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { inputChange, selectQueryString, setStatus } from '../../MoviesSlice';\r\nimport useSearchByQuery from './useSearchByQuery';\r\nimport { moviesKey, peopleKey } from '../../functionsAndKeys/keys';\r\nimport browserLogo from \"../../assets/browserLogo.svg\";\r\nimport { BrowserContainer, BrowserInput, BrowserLogo } from \"./styled\";\r\n\r\nfunction Browser() {\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState(\"\");\r\n    const searchByQuery = useSearchByQuery();\r\n    const location = useLocation();\r\n\r\n    const type = location.pathname.includes(moviesKey) ? moviesKey : peopleKey;\r\n\r\n    useEffect(() => { setValue(\"\") }, [type]);\r\n\r\n    const queryString = useSelector(selectQueryString);\r\n    const onInputChange = ({ target }) => {\r\n        setValue(target.value);\r\n        dispatch(inputChange(target.value));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setStatus(\"loading\"));\r\n        searchByQuery(queryString);\r\n    }, [queryString, dispatch]);\r\n\r\n    return (\r\n        <BrowserContainer>\r\n            <BrowserLogo src={browserLogo} alt=\"Browser Logo\" />\r\n            <BrowserInput\r\n                value={value}\r\n                placeholder={`Search for ${type}...`}\r\n                onChange={onInputChange}\r\n            />\r\n        </BrowserContainer>\r\n    );\r\n};\r\n\r\nexport default Browser;","import styled from \"styled-components\";\r\n\r\nexport const NavButton = styled.button`\r\n    color: ${({ theme }) => theme.color.navigationFont};\r\n    background-color: ${({ theme }) => theme.color.navigationBackground};\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 50px 0 0;\r\n    transition: 0.3s;\r\n    \r\n    &:hover {\r\n        background-image: radial-gradient(rgb(40, 40, 40), rgb(0, 0, 0));\r\n    }\r\n    \r\n    &:active {\r\n        background-image: radial-gradient(rgb(55, 55, 55), rgb(0, 0, 0));\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.noContainer}px) {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const NavLogo = styled.img`\r\n    display: block;\r\n    padding: 0 5px;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        padding: 0 2px;\r\n    }\r\n`;\r\n\r\nexport const NavContent = styled.h1`\r\n    display: block;\r\n    padding: 0 8px;\r\n    font-size: 24px;\r\n    line-height: 40px;\r\n    font-weight: 500;\r\n    margin: 0;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.tabletMax}px) {\r\n        font-size: 14px;\r\n        line-height: 17px;\r\n    }\r\n\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        font-size: 13px;\r\n        line-height: 17px;\r\n        padding: 0 3px;\r\n    }\r\n\r\n    &:link {\r\n        text-decoration: none;\r\n    }\r\n`;","import React from 'react';\r\nimport navLogo from \"../../assets/navLogo.svg\";\r\nimport { NavButton, NavContent, NavLogo } from \"./styled\";\r\n\r\nfunction NavLogoButton() {\r\n    return (\r\n        <NavButton>\r\n            <NavLogo src={navLogo} alt=\"Navigation Logo\" />\r\n            <NavContent>Movies Browser</NavContent>\r\n        </NavButton>\r\n    );\r\n};\r\n\r\nexport default NavLogoButton;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n    max-width: 1368px;\r\n    margin: 0 auto;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        max-width: unset;\r\n        width: calc(100% - 32px);\r\n        margin: 0 16px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Main } from \"./styled\";\r\n\r\nconst WidthContainer = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n);\r\n\r\nexport default WidthContainer;","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst activeClassName = \"active\";\r\n\r\nexport const BackgroundContainer = styled.ul`\r\n    background-color: ${({ theme }) => theme.color.navigationBackground};\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.color.navigationFont};\r\n    padding: 13px 20px;\r\n    border-radius: 24px;\r\n    transition: 0.3s;\r\n        \r\n    &:hover {\r\n        background-image: radial-gradient(rgb(40, 40, 40), rgb(0, 0, 0));\r\n    }\r\n    \r\n    &:active {\r\n        background-image: radial-gradient(rgb(55, 55, 55), rgb(0, 0, 0));\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        padding: 8px 12px;\r\n    }\r\n    \r\n    &.${activeClassName} {\r\n        border: 1px solid ${({ theme }) => theme.color.navigationFont};\r\n\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n            border-radius: 18px;\r\n        }\r\n    }\r\n    &:link {\r\n        color: ${({ theme }) => theme.color.navigationFont}\r\n    }\r\n`;\r\n\r\nexport const StyledNavLinkLogo = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.color.navigationFont};\r\n    padding: 13px;\r\n\r\n    &:link {\r\n        color: ${({ theme }) => theme.color.navigationFont}\r\n    }\r\n`;\r\n\r\nexport const NavListItem = styled.li`\r\n    padding: 0;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n    list-style: none;\r\n    background-color: ${({ theme }) => theme.color.navigationBackground};\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0;\r\n    padding: 16px;\r\n    min-height: 94px;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        padding: 0 0 16px;\r\n        font-size: 12px;\r\n        line-height: 18px;\r\n    }\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n    width: 1368px;\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto) 1fr;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n\r\n    @media( max-width: 767px) {\r\n        grid-template-columns: repeat(3, auto);\r\n    }\r\n`;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { selectThemeStatus, setStatus } from './MoviesSlice';\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { darkTheme, theme } from \"./theme\";\r\nimport Movies from \"./features/Movies/index\";\r\nimport People from \"./features/People/index\";\r\nimport MoviePage from './features/MoviePage';\r\nimport PersonPage from './features/PersonPage';\r\nimport Browser from \"./features/Browser/index\";\r\nimport NavLogoButton from \"./Common/NavLogoButton/index\";\r\nimport WidthContainer from './Common/WidthContainer';\r\nimport {\r\n  BackgroundContainer,\r\n  StyledNavLink,\r\n  StyledNavLinkLogo,\r\n  NavList,\r\n  NavListItem,\r\n  NavContainer\r\n} from \"./styled\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const themeStatus = useSelector(selectThemeStatus);\r\n\r\n  return (\r\n    <ThemeProvider theme={themeStatus === false ? theme : darkTheme}>\r\n      <GlobalStyle />\r\n      <HashRouter>\r\n        <nav>\r\n          <BackgroundContainer>\r\n            <WidthContainer>\r\n              <NavList>\r\n                <NavContainer>\r\n                  <NavListItem>\r\n                    <StyledNavLinkLogo\r\n                      to=\"/movies\"\r\n                      onClick={() => { dispatch(setStatus(\"loading\")) }}\r\n                    >\r\n                      <NavLogoButton />\r\n                    </StyledNavLinkLogo>\r\n                  </NavListItem>\r\n                  <NavListItem>\r\n                    <StyledNavLink\r\n                      to=\"/movies\"\r\n                      onClick={() => { dispatch(setStatus(\"loading\")) }}\r\n                    >\r\n                      MOVIES\r\n                    </StyledNavLink>\r\n                  </NavListItem>\r\n                  <NavListItem>\r\n                    <StyledNavLink\r\n                      to=\"/people\"\r\n                      onClick={() => { dispatch(setStatus(\"loading\")) }}\r\n                    >\r\n                      PEOPLE\r\n                     </StyledNavLink>\r\n                  </NavListItem>\r\n                </NavContainer>\r\n                <Browser />\r\n              </NavList>\r\n            </WidthContainer>\r\n          </BackgroundContainer>\r\n          <Switch>\r\n            <Route path=\"/movies/:id\">\r\n              <MoviePage />\r\n            </Route>\r\n            <Route path=\"/people/:id\">\r\n              <PersonPage />\r\n            </Route>\r\n            <Route path=\"/movies\">\r\n              <Movies />\r\n            </Route>\r\n            <Route path=\"/people\">\r\n              <People />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Redirect to=\"/movies\" />\r\n            </Route>\r\n          </Switch>\r\n        </nav>\r\n      </HashRouter>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\"\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store\"\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}