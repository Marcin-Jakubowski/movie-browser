{"version":3,"sources":["Common/Pager/arrow.svg","Common/Pager/disabledArrow.svg","NavLogoButton/navLogo.svg","MoviePage/voteIcon.svg","GlobalStyle.js","Common/Container/styled.js","Common/Container/index.js","keys.js","Common/GridTemplate/styled.js","Common/GridTemplate/index.js","Common/Header/styled.js","Common/Header/index.js","MoviesSlice.js","Common/Pager/styled.js","useQueryParameter.js","useReplaceQueryParameter.js","Common/Pager/index.js","Movies/index.js","People/index.js","NavLogoButton/styled.js","NavLogoButton/index.js","Browser/styled.js","Browser/useSearchByQuery.js","Browser/index.js","styled.js","Movies/useAPItest.js","MoviePage/styled.js","imageBaseLink.js","MoviePage/index.js","PersonPage/index.js","App.js","serviceWorker.js","theme.js","fetchFromApi.js","MoviesSaga.js","store.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","Main","styled","main","theme","breakpoint","mobileMax","Container","children","apiKey","Wrapper","section","type","css","GridTemplate","content","map","fragment","to","id","title","name","StyledHeader","h2","Header","text","moviesSlice","createSlice","initialState","pageInformations","page","results","total_results","total_pages","movieDetails","movieCredits","personDetails","personCredits","queryString","reducers","initialFetch","payload","setPageInformation","state","setMovieDetails","setMovieCredits","setPersonDetails","setPersonCredits","inputChange","setQueryString","actions","selectMovies","movies","selectPageInformation","selectMovieDetails","selectMovieCredits","selectPersonDetails","selectPersonCredits","selectQueryString","nav","ButtonContainer","div","TextContainer","color","pageText","Counter","strong","black","Button","button","pagerButton","pagerButtonDisabled","TextToHide","span","Img","img","left","second","useQueryParameter","param","location","useLocation","URLSearchParams","search","get","useReplaceQueryParameter","history","useHistory","key","value","searchParams","set","delete","push","toString","Pager","replaceQueryParameter","maxPage","pageNumber","Number","onClickButton","disabled","onClick","src","arrow","disabledArrow","alt","Movies","query","dispatch","useDispatch","useSelector","useEffect","People","people","NavButton","NavLogo","NavContent","NavLogoButton","navLogo","BrowserInput","input","useSearchByQuery","pathname","includes","queryValue","trim","undefined","Browser","useState","setValue","searchByQuery","placeholder","onChange","target","StyledNavLink","NavLink","attrs","activeClassName","StyledNavLinkLogo","NavListItem","li","NavList","ul","NavContainer","useAPI","apiLink","movieDetailsData","movieCreditsData","personDetailsData","personCreditsData","data","getData","a","axios","params","api_key","response","console","log","PosterBackgrundContainer","posterBackground","PosterShadowContainer","link","posterFont","PosterBackgroundImageContainer","PosterItemsContainer","LongTitle","p","VotesAverageContainer","VoteIcon","VotesAverageBox","VotesSmallContent","VotesBigContent","ImageBaseLink","size","MoviePage","useParams","PosterImageBaseLink","imageBaseLink","backdrop_path","original_title","voteIcon","vote_average","vote_count","cast","crew","length","path","PersonPage","Boolean","window","hostname","match","fetchFromApi","queryIfExist","Axios","fetchHandler","inputChangeHandler","MoviesSaga","action","call","put","takeLatest","debounce","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","run","ReactDOM","render","StrictMode","background","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d8e40268.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.184cc848.svg\";","module.exports = __webpack_public_path__ + \"static/media/disabledArrow.007c9ce9.svg\";","module.exports = __webpack_public_path__ + \"static/media/navLogo.542bbc90.svg\";","module.exports = __webpack_public_path__ + \"static/media/voteIcon.bdf3dbc7.svg\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Poppins', sans-serif;\r\n        background: #E5E5E5;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;","import styled from \"styled-components\"\r\n\r\nexport const Main = styled.main`\r\n    max-width: 1324px;\r\n    margin: 56px auto;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n          max-width: unset;\r\n          width: calc(100% - 16px);\r\n          margin: 24px 16px;\r\n        }\r\n`","import React from \"react\"\r\nimport { Main } from \"./styled\"\r\n\r\nconst Container = ({ children }) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n)\r\n\r\nexport default Container","export const apiKey = \"58fae116de8a1e6752562cf781d6d14a\"\r\n\r\nexport const moviesKey = \"movies\"\r\nexport const peopleKey = \"people\"\r\n\r\nexport const searchKey = \"search\"\r\nexport const pageKey = \"page\"","import styled, { css } from \"styled-components\"\r\nimport { moviesKey, peopleKey } from \"../../keys\"\r\n\r\nexport const Wrapper = styled.section`\r\n    width: 100%;\r\n    min-height: 1391px;\r\n    display: grid;\r\n    grid-gap: 24px;\r\n\r\n    ${({ type }) => type === moviesKey && css`\r\n        grid-template-columns: repeat(4, 1fr);\r\n        grid-auto-rows: 650px;\r\n\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: 1fr;\r\n            grid-auto-rows: 201px;\r\n            grid-gap: 16px 0;\r\n        }\r\n`}\r\n\r\n    ${({ type }) => type === peopleKey && css`\r\n        grid-template-columns: repeat(6, 1fr);\r\n        grid-auto-rows: 339px;\r\n        @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: repeat(2, 1fr);\r\n            grid-auto-rows: 245px;\r\n            grid-gap: 16px;}\r\n    `}\r\n\r\n`","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { moviesKey } from \"../../keys\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\n\r\nconst GridTemplate = ({ content, type }) => {\r\n  return (\r\n    <Wrapper\r\n      type={type}\r\n    >\r\n      {content && content.map((fragment) => (\r\n        <div>\r\n          {type === moviesKey\r\n          ? <Link to={`/movies/${fragment.id}`}>{fragment.title || fragment.name}</Link>\r\n          : <Link to={`/people/${fragment.id}`}>{fragment.name}</Link>}\r\n        </div>)\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default GridTemplate\r\n\r\n\r\n\r\n","import styled from \"styled-components\"\r\n\r\nexport const StyledHeader = styled.h2`\r\n    font-size: 36px;\r\n    font-weight: 600;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n           font-size: 18px;\r\n        }\r\n`\r\n","import React from \"react\"\r\nimport { StyledHeader } from \"./styled\"\r\n\r\nconst Header = ({ text }) => (\r\n    <StyledHeader>\r\n        {text}\r\n    </StyledHeader>\r\n)\r\n\r\nexport default Header","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst moviesSlice = createSlice({\r\n    name: \"movies\",\r\n    initialState: {\r\n        pageInformations: {\r\n            page: 0,\r\n            results: [],\r\n            total_results: 0,\r\n            total_pages: 0\r\n        },\r\n        movieDetails: [],\r\n        movieCredits: [],\r\n        personDetails: [],\r\n        personCredits: [],\r\n        queryString: \"initial\"\r\n    },\r\n    reducers: {\r\n        initialFetch: ({ payload }) => {\r\n\r\n        },\r\n        setPageInformation: (state, { payload }) => {\r\n            state.pageInformations = payload\r\n        },\r\n        setMovieDetails: (state, { payload }) => {\r\n            state.movieDetails = payload\r\n        },\r\n        setMovieCredits: (state, { payload }) => {\r\n            state.movieCredits = payload\r\n        },\r\n        setPersonDetails: (state, { payload }) => {\r\n            state.personDetails = payload\r\n        },\r\n        setPersonCredits: (state, { payload }) => {\r\n            state.personCredits = payload\r\n        },\r\n        inputChange: ({payload}) => {\r\n\r\n        },\r\n        setQueryString : (state, {payload}) => {\r\n            state.queryString = payload\r\n        }, \r\n    }\r\n});\r\n\r\nexport const {\r\n    initialFetch,\r\n    setPageInformation,\r\n    setMovieDetails,\r\n    setMovieCredits,\r\n    setPersonDetails,\r\n    setPersonCredits,\r\n    inputChange,\r\n    setQueryString,\r\n} = moviesSlice.actions\r\n\r\nexport const selectMovies = state => state.movies\r\nexport const selectType = state => selectMovies(state).type\r\nexport const selectPageInformation = state => selectMovies(state).pageInformations\r\nexport const selectMovieDetails = state => selectMovies(state).movieDetails\r\nexport const selectMovieCredits = state => selectMovies(state).movieCredits\r\nexport const selectPersonDetails = state => selectMovies(state).personDetails\r\nexport const selectPersonCredits = state => selectMovies(state).personCredits\r\nexport const selectQueryString = state => selectMovies(state).queryString\r\nexport default moviesSlice.reducer","import styled, { css } from \"styled-components\"\r\n\r\nexport const Wrapper = styled.nav`\r\n    display: flex;\r\n    width: 530px;\r\n    height: 36px;\r\n    margin: 40px auto;\r\n    justify-content: space-between;\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            width: 250px;\r\n            margin: 32px auto;\r\n        }\r\n`\r\n\r\nexport const ButtonContainer = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 -6px;\r\n`\r\n\r\nexport const TextContainer = styled.div`\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    padding: 8px 18px;\r\n    color: ${({ theme }) => theme.color.pageText};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            font-size: 10px;\r\n            padding: 7.5px 8px\r\n        }\r\n`\r\nexport const Counter = styled.strong`\r\n    display: inline-block;\r\n    margin: 0 8px;\r\n    color: ${({ theme }) => theme.color.black};\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            margin: 0 2px\r\n        }\r\n`\r\n\r\nexport const Button = styled.button`\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    background-color: ${({ theme }) => theme.color.pagerButton};\r\n    margin: 0 6px;\r\n    border: none;\r\n\r\n    &:hover {\r\n        filter: brightness(105%);\r\n    };\r\n\r\n    &:focus {\r\n    filter: brightness(110%);\r\n    outline: none;\r\n    }\r\n\r\n    &:active {\r\n    filter: brightness(115%);\r\n    outline: none;\r\n    }\r\n\r\n    &:disabled {\r\n        background-color: ${({ theme }) => theme.color.pagerButtonDisabled};\r\n        color: ${({ theme }) => theme.color.black};\r\n        filter: none;\r\n    }\r\n\r\n    @media( max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            padding: 7.5px 12px;\r\n            font-size: 5px;\r\n            margin: 0 4px;\r\n        }\r\n\r\n`\r\n\r\nexport const TextToHide = styled.span`\r\n     @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            display: none;\r\n        }\r\n`\r\n\r\nexport const Img = styled.img`\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        margin-left: 2px;\r\n    }\r\n\r\n    ${({ left }) => left && css`\r\n        transform: rotateY(180deg);\r\n        margin-right: 4px;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            margin-right: 2px;\r\n        }\r\n\r\n    `\r\n    }\r\n\r\n    ${({ second }) => second && css`\r\n        display: none;\r\n\r\n        @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            display: inline-block;\r\n        }\r\n        \r\n    ` }\r\n\r\n`\r\n","import { useLocation } from \"react-router-dom\"\r\n\r\nconst useQueryParameter = (param) => {\r\n    const location = useLocation()\r\n    return (new URLSearchParams(location.search).get(param))\r\n}\r\n\r\nexport default useQueryParameter\r\n","import { useLocation, useHistory } from \"react-router-dom\"\r\nimport { pageKey, searchKey } from \"./keys\";\r\n\r\nconst useReplaceQueryParameter = () => {\r\n\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    const setQueryValue = (type, { key, value }) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        if (!value) {\r\n            searchParams.delete(key)\r\n        } else {\r\n            searchParams.set(key, value)\r\n\r\n        }\r\n        if (key === searchKey) {\r\n            searchParams.set(pageKey, 1)\r\n        }\r\n        history.push(`/${type}?${searchParams.toString()}`)\r\n    }\r\n    return setQueryValue\r\n};\r\n\r\nexport default useReplaceQueryParameter","import React from \"react\"\r\nimport { Wrapper, ButtonContainer, Button, TextContainer, Counter, Img, TextToHide } from \"./styled\"\r\nimport arrow from \"./arrow.svg\"\r\nimport disabledArrow from \"./disabledArrow.svg\"\r\nimport useQueryParameter from \"../../useQueryParameter\"\r\nimport useReplaceQueryParameter from \"../../useReplaceQueryParameter\"\r\nimport { pageKey } from \"../../keys\"\r\n\r\nconst Pager = ({ content, type }) => {\r\n\r\n    const page = useQueryParameter(pageKey)\r\n    const replaceQueryParameter = useReplaceQueryParameter()\r\n    const maxPage = content.total_pages\r\n\r\n    const pageNumber = Number(page)\r\n\r\n    const onClickButton = (value) => {\r\n        replaceQueryParameter(type, {\r\n            key: pageKey,\r\n            value: value,\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={pageNumber === 1 || !pageNumber}\r\n                    onClick={() => onClickButton(1)}\r\n                >\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        First\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"first page\"\r\n                        left\r\n                        second\r\n                    ></Img>\r\n\r\n                </Button>\r\n                <Button\r\n                    disabled={pageNumber === 1 || !pageNumber}\r\n                    onClick={() => onClickButton(pageNumber - 1)}\r\n                >\r\n                    <Img\r\n                        src={pageNumber === 1 || !pageNumber ? disabledArrow : arrow}\r\n                        alt=\"Previous page\"\r\n                        left\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        Previous\r\n                    </TextToHide>\r\n                </Button>\r\n            </ButtonContainer>\r\n            <TextContainer>\r\n                Page\r\n                <Counter>\r\n                    {pageNumber ? pageNumber : 1}\r\n                </Counter>\r\n                of\r\n                <Counter>\r\n                    {maxPage}\r\n                </Counter>\r\n            </TextContainer>\r\n            <ButtonContainer>\r\n                <Button\r\n                    disabled={pageNumber === maxPage}\r\n                    onClick={() => onClickButton(pageNumber ? pageNumber + 1 : 1 + 1)}\r\n\r\n                >\r\n                    <TextToHide>\r\n                        Next\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"Next page\"\r\n                    ></Img>\r\n                </Button>\r\n                <Button\r\n                    disabled={pageNumber === maxPage}\r\n                    onClick={() => onClickButton(maxPage)}\r\n\r\n                >\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                        second\r\n                    ></Img>\r\n                    <TextToHide>\r\n                        Last\r\n                    </TextToHide>\r\n                    <Img\r\n                        src={pageNumber === maxPage ? disabledArrow : arrow}\r\n                        alt=\"last page\"\r\n                    ></Img>\r\n                </Button>\r\n            </ButtonContainer>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Pager","import React, { useEffect } from 'react';\r\nimport Container from '../Common/Container';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport Header from '../Common/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialFetch, selectPageInformation } from '../MoviesSlice';\r\nimport Pager from '../Common/Pager';\r\nimport useQueryParameter from '../useQueryParameter';\r\nimport { moviesKey, pageKey, searchKey } from '../keys';\r\n\r\n\r\nfunction Movies() {\r\n  const type = moviesKey\r\n  const query = useQueryParameter(searchKey)\r\n  const page = useQueryParameter(pageKey)\r\n  const dispatch = useDispatch()\r\n  const movies = useSelector(selectPageInformation)\r\n\r\n  const fetchOnLoad = () => {\r\n    if (!page) {\r\n      dispatch(initialFetch({\r\n        page: 1,\r\n        type: type,\r\n        query: query\r\n      }));\r\n    }\r\n    if (page) {\r\n      dispatch(initialFetch({\r\n        page: page,\r\n        type: type,\r\n        query: query\r\n      }));\r\n    }\r\n  }\r\n\r\n  useEffect(() => { fetchOnLoad() }, [page, type, query])\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Header text={!query ? `Popular ${type}` : `Search Results for \"${query}\"`} />\r\n      <GridTemplate\r\n        content={movies.results}\r\n        type={type}\r\n      />\r\n      <Pager\r\n        content={movies}\r\n        type={type}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Movies;","import React, { useEffect } from 'react';\r\nimport Container from '../Common/Container';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport Header from '../Common/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialFetch, selectPageInformation } from '../MoviesSlice';\r\nimport Pager from '../Common/Pager';\r\nimport useQueryParameter from '../useQueryParameter';\r\nimport { pageKey, peopleKey, searchKey } from '../keys';\r\n\r\nfunction People() {\r\n  const type = peopleKey\r\n  const query = useQueryParameter(searchKey)\r\n  const page = useQueryParameter(pageKey)\r\n  const dispatch = useDispatch()\r\n  const people = useSelector(selectPageInformation)\r\n\r\n  const fetchOnLoad = () => {\r\n    if (!page) {\r\n      dispatch(initialFetch({\r\n        page: 1,\r\n        type: type,\r\n        query: query\r\n      }));\r\n    }\r\n    if (page) {\r\n      dispatch(initialFetch({\r\n        page: page,\r\n        type: type,\r\n        query: query\r\n      }));\r\n    }\r\n  }\r\n\r\n  useEffect(() => { fetchOnLoad() }, [page, query, type])\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Header text={!query ? `Popular ${type}` : `Search Results for \"${query}\"`} />\r\n      <GridTemplate\r\n        content={people.results}\r\n        type={type}\r\n      />\r\n      <Pager\r\n        content={people}\r\n        type={type}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default People;","import styled from \"styled-components\";\r\n\r\nexport const NavButton = styled.button`\r\n    color: white;\r\n    background-color: black;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 50px 0 0;\r\n`;\r\n\r\nexport const NavLogo = styled.img`\r\n    display: block;\r\n    padding: 0 5px;\r\n`;\r\n\r\nexport const NavContent = styled.span`\r\n    display: block;\r\n    padding: 0 8px;\r\n    font-size: 21px;\r\n\r\n    &:link {\r\n        text-decoration: none;\r\n    }\r\n`;","import React from 'react';\r\nimport { NavButton, NavContent, NavLogo } from \"./styled\"\r\nimport navLogo from \"./navLogo.svg\"\r\n\r\nfunction NavLogoButton() {\r\n\r\n    return (\r\n        <NavButton>\r\n            <NavLogo src={navLogo} alt=\"Navigation Logo\" />\r\n            <NavContent>Movies Browser</NavContent>\r\n        </NavButton>\r\n    );\r\n};\r\n\r\nexport default NavLogoButton;","import styled from \"styled-components\";\r\n\r\nexport const BrowserInput = styled.input`\r\n    line-height: 24px;\r\n    padding: 12px;\r\n    border-radius: 24px;\r\n    width: 432px;\r\n    justify-self: end;\r\n`;","import { useLocation } from \"react-router-dom\"\r\nimport useReplaceQueryParameter from \"../useReplaceQueryParameter\"\r\nimport {moviesKey, peopleKey, searchKey, } from \"../keys\"\r\n\r\nconst useSearchByQuery = () => {\r\n    const location = useLocation()\r\n    const replaceQueryParameter = useReplaceQueryParameter()\r\n    const searchByQuery = (queryString) => {\r\n        if (queryString !== \"initial\") {\r\n            let type = \"\"\r\n            if (location.pathname.includes(moviesKey)) {\r\n                type = moviesKey;\r\n\r\n            }\r\n            if (location.pathname.includes(peopleKey)) {\r\n                type = peopleKey;\r\n            }\r\n            const queryValue = queryString.trim() !== \"\" ? queryString : undefined\r\n            replaceQueryParameter(type, {\r\n                key: searchKey,\r\n                value: queryValue\r\n\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return searchByQuery\r\n}\r\n\r\nexport default useSearchByQuery","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { inputChange, selectQueryString } from '../MoviesSlice';\r\nimport { BrowserInput } from \"./styled\"\r\nimport useSearchByQuery from './useSearchByQuery';\r\n\r\nfunction Browser() {\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n    const queryString = useSelector(selectQueryString)\r\n    const searchByQuery = useSearchByQuery()\r\n\r\n    const onInputChange = ({ target }) => {\r\n        setValue(target.value)\r\n        dispatch(inputChange(target.value))\r\n    }\r\n\r\n    useEffect(() => { searchByQuery(queryString) }, [queryString])\r\n\r\n\r\n    return (\r\n        <BrowserInput\r\n            value={value}\r\n            placeholder=\"Search for movies...\"\r\n            onChange={onInputChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Browser;","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst activeClassName = \"active\";\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding: 13.5px 20px;\r\n    \r\n    &.${activeClassName} {\r\n        border: 1px solid white;\r\n        border-radius: 24px;\r\n    }\r\n    &:link {\r\n        color: white\r\n    }\r\n`;\r\n\r\nexport const StyledNavLinkLogo = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    text-decoration: none;\r\n    color: white;\r\n    padding: 13.5px;\r\n\r\n    &:link {\r\n        color: white\r\n    }\r\n`;\r\n\r\nexport const NavListItem = styled.li`\r\n    padding: 10px 0px;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n    list-style: none;\r\n    background-color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0;\r\n    height: 94px;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n    width: 1368px;\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto) 1fr;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n`;","import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { apiKey } from \"../keys\";\r\nimport {\r\n    selectMovieDetails,\r\n    selectMovieCredits,\r\n    selectPersonDetails,\r\n    selectPersonCredits,\r\n    setMovieDetails,\r\n    setMovieCredits,\r\n    setPersonDetails,\r\n    setPersonCredits\r\n\r\n} from \"../MoviesSlice\";\r\n\r\n\r\nexport const useAPI = (type, apiLink) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const movieDetailsData = useSelector(selectMovieDetails);\r\n    const movieCreditsData = useSelector(selectMovieCredits);\r\n    const personDetailsData = useSelector(selectPersonDetails);\r\n    const personCreditsData = useSelector(selectPersonCredits);\r\n    let data = \"\";\r\n\r\n    switch (type) {\r\n        case \"movieDetails\":\r\n            data = movieDetailsData;\r\n            break;\r\n        case \"movieCredits\":\r\n            data = movieCreditsData;\r\n            break;\r\n        case \"personDetails\":\r\n            data = personDetailsData;\r\n            break;\r\n        case \"personCredits\":\r\n            data = personCreditsData;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const response = await axios.get(apiLink, {\r\n                params: {\r\n                    api_key: apiKey\r\n                }\r\n            })\r\n            switch (type) {\r\n                case \"movieDetails\":\r\n                    dispatch(setMovieDetails(response.data));\r\n                    break;\r\n                case \"movieCredits\":\r\n                    dispatch(setMovieCredits(response.data));\r\n                    break;\r\n                case \"personDetails\":\r\n                    dispatch(setPersonDetails(response.data));\r\n                    break;\r\n                case \"personCredits\":\r\n                    dispatch(setPersonCredits(response.data));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n                   \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        };\r\n        useEffect(() => { getData() }, [apiLink]);\r\n        return data;\r\n    }","import styled from \"styled-components\";\r\n\r\nexport const PosterBackgrundContainer = styled.div`\r\n    width: 100%;\r\n    background-color: ${({theme}) => theme.color.posterBackground};\r\n`;\r\n\r\nexport const PosterShadowContainer = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 1920px; \r\n    max-height: 770px;\r\n    height: 100%;\r\n    background-image: url(${({ link }) => link});\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    color: ${({theme}) => theme.color.posterFont};\r\n\r\n    @media (max-width: 1368px) {\r\n        background-size: cover;\r\n    }\r\n`;\r\n\r\nexport const PosterBackgroundImageContainer = styled.div`\r\n    background-image: linear-gradient(270deg, #000000 14.11%, rgba(0, 0, 0, 0.873268) 15.08%, rgba(0, 0, 0, 0.720529) 16.51%, rgba(0, 0, 0, 0.294577) 19.99%, rgba(0, 0, 0, 0.159921) 21.88%, rgba(0, 0, 0, 0) 25.68%), linear-gradient(90deg, #000000 13.6%, rgba(0, 0, 0, 0.984059) 14.58%, rgba(0, 0, 0, 0.967732) 15.44%, rgba(0, 0, 0, 0.865569) 16.3%, rgba(0, 0, 0, 0.230315) 22.87%, rgba(0, 0, 0, 0) 26.64%), linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0.689555) 4.66%, rgba(0, 0, 0, 0.439033) 9.34%, rgba(0, 0, 0, 0.20628) 15.16%, rgba(0, 0, 0, 0) 24.22%), linear-gradient(189.44deg, rgba(0, 0, 0, 0) 58.48%, rgba(0, 0, 0, 0.106473) 63.17%, rgba(0, 0, 0, 0.235359) 68.85%, rgba(0, 0, 0, 0.492821) 78.08%, rgba(0, 0, 0, 0.740286) 85.86%, #000000 92.87%);   \r\n`;\r\n\r\nexport const PosterItemsContainer = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 1368px;\r\n    height: 769px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    padding: 56px 0;\r\n`;\r\n\r\nexport const LongTitle = styled.p`\r\n    font-size: 64px;\r\n    line-height: 77px;\r\n    font-weight: 600;\r\n    margin: 15px 0;\r\n`;\r\n\r\nexport const VotesAverageContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const VoteIcon = styled.img`\r\n    display: block;\r\n    width: 40px;\r\n`;\r\n\r\nexport const VotesAverageBox = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const VotesSmallContent = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    display: block;\r\n`;\r\n\r\nexport const VotesBigContent = styled.div`\r\n    font-size: 30px;\r\n    font-weight: 500;\r\n    display: block;\r\n    margin: 0 8px;\r\n    line-height: 1;\r\n`;","function ImageBaseLink(size) {\r\n    return (\r\n        `http://image.tmdb.org/t/p/${size}`\r\n    );\r\n};\r\n\r\nexport default ImageBaseLink;\r\n\r\n// Image size information\r\n\r\n// {\r\n//     \"images\": {\r\n//       \"base_url\": \"http://image.tmdb.org/t/p/\",\r\n//       \"secure_base_url\": \"https://image.tmdb.org/t/p/\",\r\n//       \"backdrop_sizes\": [\r\n//         \"w300\",\r\n//         \"w780\",\r\n//         \"w1280\",\r\n//         \"original\"\r\n//       ],\r\n//       \"logo_sizes\": [\r\n//         \"w45\",\r\n//         \"w92\",\r\n//         \"w154\",\r\n//         \"w185\",\r\n//         \"w300\",\r\n//         \"w500\",\r\n//         \"original\"\r\n//       ],\r\n//       \"poster_sizes\": [\r\n//         \"w92\",\r\n//         \"w154\",\r\n//         \"w185\",\r\n//         \"w342\",\r\n//         \"w500\",\r\n//         \"w780\",\r\n//         \"original\"\r\n//       ],\r\n//       \"profile_sizes\": [\r\n//         \"w45\",\r\n//         \"w185\",\r\n//         \"h632\",\r\n//         \"original\"\r\n//       ],\r\n//       \"still_sizes\": [\r\n//         \"w92\",\r\n//         \"w185\",\r\n//         \"w300\",\r\n//         \"original\"\r\n//       ]\r\n//     },\r\n//     \"change_keys\": [\r\n//       \"adult\",\r\n//       \"air_date\",\r\n//       \"also_known_as\",\r\n//       \"alternative_titles\",\r\n//       \"biography\",\r\n//       \"birthday\",\r\n//       \"budget\",\r\n//       \"cast\",\r\n//       \"certifications\",\r\n//       \"character_names\",\r\n//       \"created_by\",\r\n//       \"crew\",\r\n//       \"deathday\",\r\n//       \"episode\",\r\n//       \"episode_number\",\r\n//       \"episode_run_time\",\r\n//       \"freebase_id\",\r\n//       \"freebase_mid\",\r\n//       \"general\",\r\n//       \"genres\",\r\n//       \"guest_stars\",\r\n//       \"homepage\",\r\n//       \"images\",\r\n//       \"imdb_id\",\r\n//       \"languages\",\r\n//       \"name\",\r\n//       \"network\",\r\n//       \"origin_country\",\r\n//       \"original_name\",\r\n//       \"original_title\",\r\n//       \"overview\",\r\n//       \"parts\",\r\n//       \"place_of_birth\",\r\n//       \"plot_keywords\",\r\n//       \"production_code\",\r\n//       \"production_companies\",\r\n//       \"production_countries\",\r\n//       \"releases\",\r\n//       \"revenue\",\r\n//       \"runtime\",\r\n//       \"season\",\r\n//       \"season_number\",\r\n//       \"season_regular\",\r\n//       \"spoken_languages\",\r\n//       \"status\",\r\n//       \"tagline\",\r\n//       \"title\",\r\n//       \"translations\",\r\n//       \"tvdb_id\",\r\n//       \"tvrage_id\",\r\n//       \"type\",\r\n//       \"video\",\r\n//       \"videos\"\r\n//     ]\r\n//   }","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAPI } from \"../Movies/useAPItest\";\r\nimport {\r\n    PosterBackgrundContainer,\r\n    PosterShadowContainer,\r\n    PosterBackgroundImageContainer,\r\n    PosterItemsContainer,\r\n    LongTitle,\r\n    VotesAverageContainer,\r\n    VotesAverageBox,\r\n    VoteIcon,\r\n    VotesSmallContent,\r\n    VotesBigContent,\r\n\r\n} from './styled';\r\nimport imageBaseLink from \"../imageBaseLink\";\r\nimport voteIcon from \"./voteIcon.svg\";\r\nimport Container from '../Common/Container';\r\nimport Header from '../Common/Header';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport { peopleKey } from '../keys';\r\n\r\nfunction MoviePage() {\r\n    const { id } = useParams();\r\n    const movieDetails = useAPI(\"movieDetails\", `https://api.themoviedb.org/3/movie/${id}?`);\r\n    const movieCredits = useAPI(\"movieCredits\", `https://api.themoviedb.org/3/movie/${id}/credits?`);\r\n    const PosterImageBaseLink = imageBaseLink(\"w1280\");\r\n\r\n    return (\r\n        <div>\r\n            <PosterBackgrundContainer>\r\n                <PosterShadowContainer link={'\"' + PosterImageBaseLink + movieDetails.backdrop_path + '\"'}>\r\n                    <PosterBackgroundImageContainer>\r\n                        <PosterItemsContainer>\r\n                            <LongTitle>\r\n                                {movieDetails.original_title}\r\n                            </LongTitle>\r\n                            <VotesAverageContainer>\r\n                                <VoteIcon src={voteIcon} alt=\"Vote icon\" />\r\n                                <VotesAverageBox>\r\n                                    <VotesBigContent>{movieDetails.vote_average}</VotesBigContent>\r\n                                    <VotesSmallContent> / 10</VotesSmallContent>\r\n                                </VotesAverageBox>\r\n                            </VotesAverageContainer>\r\n                            <p>\r\n                                <VotesSmallContent>\r\n                                    {movieDetails.vote_count} votes\r\n                        </VotesSmallContent>\r\n                            </p>\r\n\r\n                        </PosterItemsContainer>\r\n                    </PosterBackgroundImageContainer>\r\n                </PosterShadowContainer>\r\n            </PosterBackgrundContainer>\r\n            <Container>\r\n                <Header text={\"Cast\"} />\r\n                <GridTemplate\r\n                    content={movieCredits.cast}\r\n                    type={peopleKey}\r\n                />\r\n            </Container>\r\n            <Container>\r\n                <Header text={\"Crew\"} />\r\n                <GridTemplate\r\n                    content={movieCredits.crew}\r\n                    type={peopleKey}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAPI } from \"../Movies/useAPItest\";\r\nimport Container from '../Common/Container';\r\nimport Header from '../Common/Header';\r\nimport GridTemplate from '../Common/GridTemplate';\r\nimport { moviesKey } from '../keys';\r\n\r\nfunction MoviePage() {\r\n    const { id } = useParams();\r\n    const personDetails = useAPI(\"personDetails\", `https://api.themoviedb.org/3/person/${id}?`);\r\n    const personCredits = useAPI(\"personCredits\", `https://api.themoviedb.org/3/person/${id}/tv_credits?`);\r\n    return (\r\n        <div>\r\n            <Container>{personDetails.name}</Container>\r\n            <Container>\r\n                <Header text={`Movies - cast(${personCredits.cast && personCredits.cast.length})`} />\r\n                <GridTemplate\r\n                    content={personCredits.cast}\r\n                    type={moviesKey}\r\n                />\r\n            </Container>\r\n            <Container>\r\n                <Header text={`Movies - Crew(${personCredits.crew && personCredits.crew.length})`} />\r\n                <GridTemplate\r\n                    content={personCredits.crew}\r\n                    type={moviesKey}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport Movies from \"./Movies/index\";\r\nimport People from \"./People/index\";\r\nimport NavLogoButton from \"./NavLogoButton/index\";\r\nimport Browser from \"./Browser/index\";\r\nimport { StyledNavLink, StyledNavLinkLogo, NavList, NavListItem, NavContainer } from \"./styled\";\r\nimport MoviePage from './MoviePage';\r\nimport PersonPage from './PersonPage';\r\n\r\nexport default () => (\r\n  <HashRouter>\r\n    <nav>\r\n      <NavList>\r\n        <NavContainer>\r\n          <NavListItem>\r\n            <StyledNavLinkLogo to=\"/movies\"><NavLogoButton /></StyledNavLinkLogo>\r\n          </NavListItem>\r\n          <NavListItem>\r\n            <StyledNavLink to=\"/movies\">MOVIES</StyledNavLink>\r\n          </NavListItem>\r\n          <NavListItem>\r\n            <StyledNavLink to=\"/people\">PEOPLE</StyledNavLink>\r\n          </NavListItem>\r\n          <Browser />\r\n        </NavContainer>\r\n      </NavList>\r\n      <Switch>\r\n        <Route path=\"/movies/:id\">\r\n          <MoviePage />\r\n        </Route>\r\n        <Route path=\"/people/:id\">\r\n          <PersonPage />\r\n        </Route>\r\n        <Route path=\"/movies\">\r\n          <Movies />\r\n        </Route>\r\n        <Route path=\"/people\">\r\n          <People />\r\n        </Route>\r\n      </Switch>\r\n    </nav>\r\n  </HashRouter>\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const theme = {\r\n    color: {\r\n        black: \"#18181B\",\r\n        background: \"#E5E5E5\",\r\n        pagerButton: \"#D6E4FF\",\r\n        pagerButtonDisabled: \"#E4E6F0\",\r\n        pageText: \"#7E839A\",\r\n        posterBackground: \"#000000\",\r\n        posterFont: \"#ffffff\"\r\n\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n};","import Axios from \"axios\";\r\nimport { apiKey } from \"./keys\"\r\n\r\nexport const fetchFromApi = async (link, page, query) => {\r\n\r\n    const queryIfExist = query ? { query: query } : \"\"\r\n\r\n    try {\r\n        const response = await Axios.get(link, {\r\n            params: {\r\n                api_key: apiKey,\r\n                page: page,\r\n                ...queryIfExist\r\n\r\n            }\r\n        })\r\n        return await response.data;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import { put, debounce, call, takeLatest } from \"redux-saga/effects\"\r\nimport { fetchFromApi } from \"./fetchFromApi\"\r\nimport { initialFetch, inputChange, setPageInformation, setQueryString, } from \"./MoviesSlice\"\r\nimport {moviesKey, peopleKey} from \"./keys\"\r\n\r\n\r\n\r\nfunction* fetchHandler(action) {\r\n    const page = yield action.payload.page\r\n    const type = yield action.payload.type\r\n    const query = yield action.payload.query\r\n    if (query) {\r\n        if (type === moviesKey) {\r\n            const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/search/movie??\", page, query)\r\n            yield put(setPageInformation(data))\r\n        }\r\n        if (type === peopleKey) {\r\n            const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/search/person?\", page, query)\r\n            yield put(setPageInformation(data))\r\n        }\r\n    } else {\r\n        if (type === moviesKey) {\r\n            const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/movie/popular?\", page)\r\n            yield put(setPageInformation(data))\r\n        }\r\n        if (type === peopleKey) {\r\n            const data = yield call(fetchFromApi, \"https://api.themoviedb.org/3/person/popular?\", page)\r\n            yield put(setPageInformation(data))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction* inputChangeHandler(action) {\r\n    const payload = yield action.payload\r\n    yield put(setQueryString(payload))\r\n}\r\n\r\n\r\nexport function* MoviesSaga() {\r\n    yield takeLatest(initialFetch.type, fetchHandler)\r\n    yield debounce(500, inputChange.type, inputChangeHandler)\r\n}","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport moviesSlice from \"./MoviesSlice\"\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport { MoviesSaga } from \"./MoviesSaga\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        movies: moviesSlice\r\n    },\r\n    middleware: [sagaMiddleware]\r\n}\r\n)\r\n\r\nsagaMiddleware.run(MoviesSaga)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\"\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { theme } from \"./theme\";\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}